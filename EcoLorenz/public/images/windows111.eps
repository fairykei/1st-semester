%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (User) ()
%%Title: (window1.eps)
%%CreationDate: 12/9/2009 6:10 PM
%%Canvassize: 16383
%%BoundingBox: 71 21 523 615
%%HiResBoundingBox: 71.4893 21.2578 522.4834 614.3511
%%DocumentProcessColors: Cyan Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 2 0 () 
%AI3_TemplateBox: 315.5 313.79 315.5 313.79
%AI3_TileBox: 26.0449 -97.8555 603.2451 730.5049
%AI3_DocumentPreview: Header
%AI5_ArtSize: 629.29 629.29
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -334 664.29 1 1262 871 18 0 0 9 114 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.6
%AI7_Thumbnail: 100 128 8
%%BeginData: 15434 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1FFFA8A87D7DA8FD1BFFA8A87D7D7DFD3CFFA8A8A8FFA8A87DA8
%A8FD1AFFA87DFF7DFFA8A8A8FD2AFFA8A87DA87DA87DA87DA87DA87DFD04
%A8FFFFFF7DA8A87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DFD04A8FFFFFFA8A87DA87DA87DA87DA87DA87DA87DA8FD19FF
%A852527D527D527D527D527D52527DFFFFFFA8FFA87D7DA8527D527D527D
%527D527D527D527D527D527D527D527D527D527D52527DA87DFFA8A8A8FF
%A87D5252527D527D527D527D527D52FD19FFA852FFA8FFA8FFA8FFA8A87D
%A8FFFFFFA87DA8A8FF7DFD04A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FF7DA8A8A8FFAF7DA8A8FFFFFFA8A8A8FFA8FFA8FFA8FF
%A87DA8FD18FFA87DA8FFA8A8A8FF7D7D7DFFFFFF7DA8A8FFA8FFA87D7DFD
%04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD04A87DA87DFF
%A8FFA8A87DA8A8FFA8A87DFD07A852FD1AFF52FFFFFFA8A87DA8A9FFA8A8
%7EA8FD04FFA8FF7DA87DFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8FF7DFD04A8FD05FFA8A87DFFFFFF7DFD04A8FFA87DA8FD18FF
%A87DA8FFA8A87DFFA8A87DA8A8FFFFFFA9FFA8FFA87D7DA8FD1D7DA87DFF
%A8FFFFFFA9FFAFA87DA8A8FFA87D7DFFA8A852FD1AFF52FFFFFFA8FFA8A8
%A8FD09FFA8FF7DA87DFD1BFFFD05A8FFAFFD07FFA8A87DFFA8A8FFFFA87D
%A8FD18FFA87DA8FFA8A8A87D7DFFFFFFAFFD05FFA8FFA87D7DA8A8FD1AFF
%A87DFF7DFFA8FD07FFAFFFFF7D7DA87DFFA8A852FD19FFA852FFFFFF7DFF
%84A8FD0AFFA9FF7DA8A8FD1BFFFD04A8FFA8A8FD09FF7DA8A8A8FFFFA87D
%A8FD18FFA852A8FFFD04A87DFFA8FFFFFFA8FFA8FFA8FFA8A87DA8A8FD1A
%FFA87DA87DFFA8FFA9AFA8FFA9FFFFFFA8A87DA87DFFA8A852FD19FFA852
%FFFFFF84FF84A8FD04FFAFFFA8FD05FF7DA8A8FD1BFFFD04A8FFFFA8FFA8
%AFA8FD05FF7DA8A8A8FFFFA87DA8FD18FFA87DA8FFFD04A87DFFAFFFAFAF
%A8A9FFFFA8FFA87D7DA8A8FD1AFFA87DA87DFFA8FFFFFFA8AFA8FFFFFFAF
%A87EA87DFFAFA852FD1AFF52FFAFFFA8FF7DA8FD04FFAFA9A9FFFFFFA8FF
%7D7D7DFD1BFFFD05A8FFA9FFFFFFA8FFA8FFFFFF7DA8A8A8FFFFA87DA8FD
%18FFA87DA8FFFD04A87DFFAFAFA8A8A8FFA8FFA8FFA87D7DA8A8FD1AFFA8
%7DA87DFFA8FFFFFFA9AFA8AFA8FFAF7D7DA87DFFA8A852FD1AFF52FFFFFF
%A8FF7DA8FFFFA9FFA8FD05FFA8FF7DA8A8FD1BFFFD05A8FD06FFAFA8FFFF
%FF7DA8A8A8FFFFA87DA8FD18FFA87DA8FFFD04A87DFFA8AF84FFFFFFAFFF
%A8FFA8A87DA8A8FD1AFFA87DFF7DFFA8FFFFFFAFFFA8A8A8FFFF7E7DFFA8
%FFA8A952FD19FFA852FFFFFF7DFF7EA8FFFFA8FD09FF7DA8A8FD1BFFFD04
%A8FFFFA8FD05FFAFAFAFFF7DA8A8A8FFFFA87DA8FD18FFA852A8FFFD04A8
%7DFFA8FFAFFFA8FFAFFFA8FFA87D7DA8A8FD1AFFA87DA87DFFA8FFA8FFAF
%FFA8FFAFAFA8A87DA87DFFAFA852FD19FFA852FFFFFFA8FF84A8AFFD0BFF
%7DA8A8FD1BFFFD04A8FFFFA8FD07FFAFFF7DA8A8A8FFFFA87DA8FD18FFA8
%7DA8FFFFA8A8A87DFFAFFFFFFFAFFFFFFFA8FFA87D7DA8A8FD1AFFA87DA8
%7DFFA8FFAFFFFFFFAFFFAFFFAFA87EA87EFFFFA852FD1AFF52FFFFFFA8FF
%7DA8FD0AFFA8FF7D7D7DFD1BFFFD04A8FFFFAFFD09FF7DA8A8A8FFFFA87D
%A8FD18FFA87DA8FFFD04A87DAFA9FFA8FFAFFFA8FFA8FFA8A87DA8A8FD1A
%FFA87DA8A8FFA8FFAFFFA8FFAFFFA8FFA87D7DAFA8FFA8A852FD1AFF52FF
%FFFFA8FF7DA8AFFD09FFA8FFA87DA8FD1BFFA8A8A8FFFFFFAFFD07FFAFFF
%7DA8A8A8FFFFA87DA8FD18FFA87DA8FFAFA8A8A87DFFA8FFAFFFAFFFAFFF
%A8AFA8A87DA8A8FD1AFFA87DA8A8FFA8FFAFFFAFFFAFFFA8AFAF7E7DFFA8
%FFFFFF52FD19FFA852FFFFFFA8FF7EA8FFFFA8FD06FFA97DA8527DA8FD1B
%FFA8A8A87D7DA8A8FD05FFAFAFAFFF7DA8A8A8FFFFA87DA8FD18FFA87DA8
%FFFFA8A8A87DFFA8AFA8FFA8FFAFFF7E7D7D527DA8A8FD1AFFA87DA852A8
%7DAFA8FFAFFFA8A9A8FFA8A87DA87DFFFFA852FD19FFA852FFFFFFA8FF84
%A8AFFFAFAFA8FD05FF7DA852A8A8FD1BFFA8A8A87D7DA8A8FD05FFA8FFAF
%FF7DA8A8A8FFFFA87DA8FD18FFA87DA8FFFFA8A8A87DFFA8FFA8A8AFFFAF
%FF84FD047DA8A8FD1AFFA87DA8527D7DA8AFFFAFFF84AFA8AFAFA884A8A8
%FFFFA852FD19FFA852FFFFFFA8FF7DA8FFFFA8FFA8FFFFFFA8A87DA87D7D
%7DFD1BFFA8A8A87D7DA87DFFAFFFA8AFA9FFAFFF7DA8A8A8FFFFA87DA8FD
%18FFA87DA8FFAFA8A8A87DFFAFAFA8AFA8FFA8A87DA87D7D7DA8A8FD1AFF
%A87DA852A87D7DA8FFA8A9A8FFA8FFA97D7DFFA8FFFFFF52FD1AFF52FFFF
%FFA8FF7DA8FFFFA9FFAFAFAFFFFD04A8527DA8FD1BFFA8A8A87DA8A87DA8
%FFFFA8FFA9FFFFFF7DA8A8A8FFFFA87DA8FD18FFA87DFFFFFFA8A8A87DFF
%AFFFA8FFA8AFA8A87DFFA87D7DA8A8FD1AFFA87DA852A8A87DA8FFA8AFA9
%AFA9FFAF7E7DFFA8FFFFFF52FD19FFA852FFFFFFA8FF7DA8AFFFFFFFA9FF
%A8FFFD04A87D7DA8FD1BFFA8A8A87DA8A87DFFA9AFA8FFAFFFAFFF7DA8A8
%A8FFFFA87DA8FD18FFA87DA8FFFFA8A8A87DFFA8FFA8AFFD05A8FFFFA87D
%A8A8FD1AFFA87DA8A8FFA8A87DA8A8AFA8FFAFFFA8A87DA8A8FFFFA852FD
%19FFA852FFFFFFA8FF7DA8AFFFFFFFA8FFA9A8AFFFFFFFA8A8A8FD1BFFA8
%A8A8FFFFFFAFFFA8FFAFFFFFFFAFFF7DA8A8FFFFFFA87DA8FD18FFA87DA8
%FFFFA8A8A87DFFA9FFAFFFA8AFA9FFA8FFFFA87DA8A8FD1AFFA87DA8A8FF
%A8AFA9FFA8AFA8FFAFFFA8A87DFFA8FFFFFF52FD19FFA852FFFFFFA8FF7D
%A8AFFFAFFFFFFFA9FFFFAFA8FFA87D7DFD1BFFFD04A8FFFFA9FFA8FFAFFF
%AFFFFFFF7DA8A8A8FFFFA87DA8FD18FFA87DFFFFFFA8A8A87DFFA9FFA8FF
%AFFFA8FFA8FFFFA87DA8A8FD1AFFA87DA8A8FFA8FFA9AFA8FFAFFFA8FFA9
%7E7DFFA8FFFFFF52FD1AFF52FFFFFFA8FF7DA8AFFFAFFFFFFFAFFFFFFFA8
%FFA87DA8FD1BFFFD04A8FFFFAFFFAFFFFFFFAFFFFFFF7DA8A8A8FFFFA87D
%A8FD18FFA87DFFFFFFA8A8A87DFFAFFFA9FFA9FFA8FFA8FFFFA87DA8A8FD
%1AFFA87DA8A8FFA8FFA9FFA8FFAFFFA9FFAFA87DFFA8FFFFFF52FD19FFA8
%52FFFFFFA8FF7DA8AFFFFFFFA9FFAFAFAFFFFFFFA87DA8FD1BFFA8A8A8FF
%FFFFA8FFA8FFA8FFFFFFAFFF7DA8A8A8FFFFA87DA8FD18FFA87DA8FFFFA8
%A8A87DFFA8FFA8AFA8AF84FFA8FFFFA87DA8A8FD1AFFA87DA8A8FFA8AFA8
%A8A8AFA8FFA9FFA8A87DFFA8FFFFFF52FD19FFA852FFFFFFA8FF7DA8AFFF
%AFFFAFAFA8FFAFFFFFFFA87DA8FD1BFFA8A8A8FFFFFFA8FFA9A9A8FFA9FF
%AFFF7DA8A8FFFFFFA87DA8FD18FFA87DA8FFFFA8A8A87DFFA8FFA8A984FF
%AFFFA8FFFFA87DA8A8FD1AFFA87DA8A8FFA8AFA9FFA8A8A8FFA8FFA8A87D
%A8A8FFFFFF52FD19FFA852FFFFFFA8FF7DA8AFFFA8AFA8FFAFFFAFAFA8FF
%A87D7DFD1BFFFD04A8FFFFA9FFAFFFAFA9A8FFAFFF7DA8A8A8FFFFA87DA8
%FD18FFA87DFFFFFFA8A8A87DFFA8AFA8FFA9FFA8FFA8FFA8A87DA8A8FD1A
%FFA87DA87DFFA8AFA9FFA8FFA8FFA8AFA9847DFFA8FFFFFF52FD1AFF52FF
%FFFFA8FF7DA8AFFFAFFFFFFFAFFD05FF7D7DA8FD1BFFFD04A8FFFFAFFFAF
%FFFFFFAFFFAFFF7DA8A8A8FFFFA87DA8FD18FFA87DFFFFFFA8A8A87DFFAF
%FFA9FFAFFFA9FFA8FFA8A87DA8A8FD1AFFA87DA8A8FFA8FFAFFFA9FFAFFF
%A9FFAFA87DFFA8FFFFFF52FD19FFA852FFFFFFA8FF7D84AFFFAFFFAFFFAF
%FFAFFFFFFF7D7DA8FD1BFFFD04A8FFFFA8FFAFFFAFFFAFFFAFFF7DA8A8A8
%FFFFA87DA8FD18FFA87DA8FFFFA8A8A87DA8A8FFA9FFA8FFA9FFA8FFA8A8
%7DA8A8FD1AFFA87DA87DFFA8AFA8FFA9FFA8FFA9AF847D7DA8A8FFFFFF52
%FD19FFA852FFFFFFA8FFFFFFA8A8A8FFAFFFAFFFAFFFFFFF7DA8A8FD1BFF
%FD04A8FFFFA8FFAFFFAFFFAFAFA8FFFFFFA8A8FFFFA87DA8FD18FFA852A8
%FFFFA87DFFFFFFA8A884A8A8FFAFFFA8FFA8A87DA87DA87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DFD04A87D7DA87DFFFFAFA9FFAFAFA8A8
%A8FFFFFFA8A8A8FFFFFF52A8FD17FFA8A8A8FD05FFA8FD05FFA8A8A8FFAF
%AFFFFF7D7D7DFD1BFFFD04A8FFFFA9FFA9AFA8A8FD04FFA8A8FFFFA8FFFF
%A87DA8A8FD12FFA87D7DA8A8FFA8FFA8FFA8FFA8A8A8FFFFFFA8A87DA9A8
%FFA87D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A87DA87DFFA8AFA8A8A8FFFFFFA8A87DA8A8FFA8FFA8FFA8FFA8A87D
%7DFD11FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD05FFA8A8FFFF7D7D7DA8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFD04A8
%FF7DFD05FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFD11FF7DFD0EA87D
%A8A8FFFFFFA8FFA8A87DA87DFD1AA87D7DA87DFFA8FD05FF7D7DFD0EA87D
%A8FD11FFA87DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD05FF7DFD04A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD05A8FD04
%FFA87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DA8FD13FFA8A8A8FD0FFFA8
%FFFFFFA87D7DA8A8FD1AFFA87DA87DFFFFFFA8A8A8FD0FFF7DA8FD16FFFD
%11A87DA8FFFF7DFD1DA87DFD04A8FF7DFD12A8FD1AFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8A87D7D52A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8A87DA87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FD2EFFA8FD21FFA8FDECFFA8FD59FFA8FD07FFA8A87D7DA8A8
%FD53FFA8A87D7D7DA8FD05FF7DFF7DA8A8A87DA8FD50FF7DA8A8FF7DA87D
%FD05FFA8A8A87DFFFFFFA8A8A8FF7DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFFFFA8
%A8FFFFFFA8A87DA8FD05FF7DFF7DA8FFA8A8FFA8A87D52527D527D527D52
%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52
%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52
%7D527D525252A8A8FFA8A8A8FF7DA87DFD05FFFD04A8FF7DA8A8FFFFFFA8
%A87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FF7DA8A8FFFFFFA8A87DFFA87D7DA8FD05FF7DA87DA8
%A9A8AFA87DA8A8FFFFA87DFD41A87DA8A8FFA8A87DA8A8FFA8FF7D7D7DFD
%05FFFD04A8FFA8FFFFFFA8A87DA8FFFFA8A87DFFA8A8A8FFA8A8A8FFA8A8
%A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A87DA8A8FFFFFF7D7DA8FFFFFF
%AFFFA87D7DA8FD05FF7DA87DA8FFA8FD04FF7D7D847D7DFFFFA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFA87E
%7D8452FD05FFA8FF7D7D7DFD05FFA8A8A87DFFA8FD04FFA87DFFA8A87DA8
%A8A8FD3AFFA8A87DA8A8FF847DFD06FFA87D7DA8FD05FF7DA87DA8A8A8FF
%FFA9FF7D7DA8AFA97D7DA8A8FD39FFA8A87D7D84FFA88452FFFFFFA9FFA8
%FF7D7D7DFD05FFA8A8A87DFFA8FD04FFA87DFFAFFF7DA8A8A8FD3AFFA8A8
%7DAFAFFF847DFFFFAFFD04FFA87DA8FD05FF7DFF7DA8A8A8FFFFA8FF7D7D
%A8AFA87D7DFFA8FD39FFA8FF7D7D84FFA9A852FFA8AFFFFFA8FF7D7D7DFD
%05FFFD04A8FFA8FFFFAFA9A87DFFA8FF7DA8A8A8FD39FFAFA8A87DA9A9FF
%847DAFAFAFFFA8FFFF7D7DA8FD05FF7DA87DFD04A8FFA8A97D84A8AFA884
%7DA9A8FD39FFA8A87D7D84AFA8A859AF84FFFFFFA8FF7D7D7DFD05FFFD04
%A8FFA8FFFFFFA8A87DFFA8FF7DA8A8FD3BFFA8A87DAFAFFF847DA8FFFFFF
%AFFFFFA87DA8FD05FF7DA87DA8AFA8AFFFFFFF7D84A8AFA8847DFFA8FD39
%FFA8A87D7DA8AFA8A859AFFD04FFA8FF7D7D7DFD05FFFD04A8FFA8FD04FF
%A87DAFA8FF7DA8A8A8FD3AFFA8A87DAFA9AF8484FD06FFA8A87DA8FD05FF
%7DA87DA8A8A8AFFFA8FF7D7D84AFA87D7DFFA8FD39FFA8AF7D7D84AFA884
%52FFAFFFA8FFA8FF7D7D7DFD05FFFD04A8FFA8FD04FFA87DFFA8FF7DA8A8
%A8FD3AFFA8A87DAFA9AF7E7DFD07FFA87DA8FD05FF7DFFFD04A8FFFFAFFF
%7D7DA8AFA87D7DFFA8FD39FFA8FF7D7D84AFA9A852FFFFFFAFFFA8FF7D7D
%7DFD05FFFD04A8FFA8FD04FFA87DFFA8FF7D84A8AFFD3AFFA8A87DA8A8FF
%847DFD04FFA8FFFF7D7DA8FD05FF7DA87DFFA8A8A8FFAFFF7D7DA8AFA884
%7DAFA8FD39FFA8A87D7DA8AFA8A852FFA8FFAFFFA8FF7D7D7DFD05FFFD04
%A8FFA8FD04FFA87DFFA9FF7DA8A8FD3BFFA8A87DAFAFFF847DFD04FFAFFF
%FF7D7DA8FD05FF7DA87DFFAFA8AFFFFFFF7D7DA9AFA8847DFFA8FD39FFA8
%A87D7D84AFA8A852FFAFFFAFFFA8FF7D7D7DFD05FFA8A8A8FFFFA8FD04FF
%A87DFFA8AF7DA8A8A8FD3AFFA8A87DA9A9FF847DFD04FFAFFFFFA87DA8FD
%05FF7DA8A8FFA8A8AFFFA8FF7D7DA8A9A87D7DFFA8FD39FFA8FF7D7D84AF
%A8A852FFAFFFA8FFA8FF7D7D7DFD05FFA8A8A8FFFFA8FD04FFA87DFFA8FF
%7DA8A8A8FD3AFFA8A87DAFAFAF7D7DFD07FFA87DA8FD05FF7DFFA8FFA8A8
%AFFFAFFF7D7DA8AFAF7E7DFFA8FD39FFA8FF7D7DA8FFA88452FFAFFFAFFF
%A8FF7D7D7DFD05FFA8A8A8FFFFA8FD04FFA87DAFA8FF7D84A8FD3BFFA8A8
%7DA9A8FF847DFD04FFA8FFFFA87DA8FD04FFA87DA87DFFA8A8A8FFAFFF7E
%84A8A9A8847DFFA8FD39FFA8A87D7DA8AFA8847DFFA8FFAFFFA8FF7D7D7D
%A8FFFFFFFD04A8FFFFA8FD04FFA87DFFA8FF7DA8A8FD3BFFA8A87DAFA9FF
%A87DAFFFFFFFA9FFFFA87DA87DFFFFA8A87DA8A8FFFFA8A9FFAFAF7D84A8
%AFA8847DFFA8FD39FFA8A87D7DA8FFA8A859A9AFFFAFFFA8FF7D7D7DA8A8
%FFFF7DA8A8A8FFFFA8FFAFFFA8A87DFFAFFF7DA8A8A8FD3AFFA8A87DAFAF
%FF7E7EA8FFFFFFAFFFFFA87DA87DA8FFA8A87DFF7DFFA8A8AFFFA8AF7D7D
%A8FFA97D7DFFA8FD39FFA8FF7D7DA8FFA98452AFA8FFA8FFA8FFFD047DA8
%FFFF7DA8A8A8FFFFA8FFFFAFAFA87DFFAFFF7DA8AFFD3BFFA8A87DAFAFFF
%847DAFAFAFFFAFFFFFA87DA8A8FFFFA8A87DA87DFFA8AFAFAF84FF8484A9
%FFAF7E7DFFA8FD39FFA8FF7D7DA8FFAFA87DFFA8AFA9FFA8FF7D7D7DFF7D
%FFFFFFA8A8A8FFFFA8FFAFAFAFA87DFFAFFF7D84A8FD3BFFA8A87DAFAFFF
%A87DAFFFA9FFA8FFFFA87DA8FD05FF7DA87DFFFFA8A8FFA8FF7D7DA9AFA8
%847DFFA8FD39FFA8A87D7DA8FFA8A852AFA8FFAFFFA8FF7D7D7DFD05FFA8
%A8A8FFFFA8FFAFFFAFA87DFFAFFF7DA8A8FD3BFFA8A87DAFAFFFA87DAFFF
%A9FFA9FFFFA87DA8FD05FF7DA87DFFFFA8A9FFAFFF7D7EAFFFA8A87DFFA8
%FD39FFA8A87D7DA8FFA8A852FFA9FFAFFFA8FF7D7D7DFD05FFA8A8A8FFFF
%A8FFAFFFFFA87DFFAFFF7DA8A8A8FD3AFFA8A87DAFAFFF847DFFFFAFFFAF
%FFFFA87DA8FD05FF7DA87DFFA8A8A9AFA8FF7D7DA8FFA97E7DFFA8FD39FF
%A8A87D7DA8FFA9A852FFA9FFA8FFA8FF7D7D7DFD05FFA8A8A8FFFFA8FFA8
%FFAF847DFFAFFF7DA8A8FD3BFFA8A87DFFAFFFA87DAFFFA8FFAFFFFFA87D
%A8FD05FF7DFF7DFFFFAFAFA984FF7D7EA8FFAF847DFFA8FD39FFA8FF7D7D
%A8FFAFA859FFA8A8A9FFA8FF7D7D7DFD05FFA8A8A8FFFFA8FFAFAFA8A87D
%AFAFFF7D7DA8FD3BFFA8A87DAFAFFF847DA8AFAFFFA8FFFFA87DA8FD05FF
%7DA87DFFFFA8A8FFA9A97D84A8AFA8847DFFA8FD39FFA8A87D7DA8AFA8A8
%59A8A8FFA9FFA8FF7D7D7DFD05FFFD04A8FFA8FFFFFFAFA87DFFAFFF7DA8
%A8FD3BFFA8A87DAFAFFF847EAFFFFFFFA9FFFFA87DA8FD05FF7DA87DFFFF
%A8A9FFAFFF7D84AFA9A8A87DFFA8FD39FFA8A87D7DA8AFA8A853FFA9FFAF
%FFA8FF7D7D7DFD05FFFD04A8FFA8FFAFFFAFA87DFFAFFF7DA8A8FD3BFFA8
%A87DAFAFFF847DAFFFAFFFAFFFFFA87DA8FD05FF7DA87DA8FFA8A9FFA8FF
%7D7DA8FFA9847DFFA8FD39FFA8A87D7DA8FFA9A852FFA9FFA8FFA8FF7D7D
%7DFD05FFFD04A8FFA8FFAFFFFFA87DFFAFFF7D7DA8FD3BFFA8A87DFFAFFF
%847DFFFFAFFFAFFFFFA87DA8FD05FF7DA87DA8FFAFAFFFA9FF7D7DA8FFA8
%7D7DFFA8FD39FFA8FFA87D7EFFAFA852FFAFFFA9FFA8FF7D7D7DFD05FFFD
%04A8FFA8FFAFFFAFA87DAF84A8FFFFFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FFFFFFA87DAF847DAFFFAFFFA8FFFF
%A87DA8FD05FF7DA87DA8FFA8A8FFA9FF7D7DA8FFFFFFA8A87DFD3CA8FFFF
%FFA87D52AFA8FFA9AFA8FF7D7D7DFD05FFFD04A8FFA8FFA8A8A8FD05FFA8
%A8A8FD3DFFA8FD05FFA8A884FFA8FFA8A87DA8FD05FF7DA87DA8FF84527D
%7DFD04FFA87DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8A87DA8FD04FFA87D597EA8FF7D7D7DFD05FFFD04
%A8FF7DA8FD04FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD05FF7DFFA8A87DA8FD
%05FF7DA87DA8FD06FFA87D7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8
%A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87D
%A8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA87D7D7DFD06FFA87D7D
%7DFD05FFFD04A8FD04FFA87DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8FD
%04FFA8A87DA8FD05FF7DA87DA8FFFFFD05A8FD4AFFA87DA8A8FFFFA87D7D
%7DFD05FFFD04A8FFA8A8FFFFFFFD04A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFF
%FFA8FFA8A87DA8FD05FF7D7D527DA8FD07FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD
%07FFA87D527D7DFFFFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Trail  ver4.2 for Win AICS4) (FILTERiT4 Live Trail ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Tiling  ver4.2 for Win AICS4) (FILTERiT4 Live Tiling ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 DropShadow  ver4.2 for Win AICS4) (FILTERiT4 Live Shadow ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Reflections  ver4.2 for Win AICS4) (FILTERiT4 Live Reflections ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Neon  ver4.2 for Win AICS4) (FILTERiT4 Live Neon ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Generation  ver4.2 for Win AICS4) (FILTERiT4 Live Generation ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Galaxy  ver4.2 for Win AICS4) (FILTERiT4 Live Galaxy ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Frame  ver4.2 for Win AICS4) (FILTERiT4 Live Frame ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Explosion  ver4.2 for Win AICS4) (FILTERiT4 Live Explosion ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Emboss  ver4.2 for Win AICS4) (FILTERiT4 Live Emboss ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Cutout  ver4.2 for Win AICS4) (FILTERiT4 Live Cutout ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Circle  ver4.2 for Win AICS4) (FILTERiT4 Live Circle ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(FILTERiT4 Border  ver4.2 for Win AICS4) (FILTERiT4 Live Border ver4.2 for Win AICS4) (FILTERiT4.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
7 Bn
%AI5_BeginGradient: (GradientFill 1)
(GradientFill 1) 0 2 Bd
[
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A
5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182
838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2
D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FA
FBFCFDFEFF
>
0 %_Br
[
0 0 0 0 1 50 100 %_BS
%_0 0 0 0 1 50 100 Bs
0 0 0 0.8 1 50 0 %_BS
%_0 0 0 0.8 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 2)
(GradientFill 2) 0 2 Bd
[
<
030202020202010101010101000000
>
0
0
<
0F0E0D0C0B0A090807050403020100
>
1 %_Br
[
0 0 0 0 1 50 100 %_BS
%_0 0 0 0 1 50 100 Bs
0.01 0 0 0.06 1 50 0 %_BS
%_0.01 0 0 0.06 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 3)
(GradientFill 3) 0 2 Bd
[
<
B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
DBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 0 0 1 50 100 %_BS
%_0 0 0 0 1 50 100 Bs
0 0 0 0.3 1 50 0 %_BS
%_0 0 0 0.3 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 4)
(GradientFill 4) 0 4 Bd
[
0.05
0
0
0
1 %_Br
0.05
0
0
<
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2827262524232221201F1E1D
1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
1 %_Br
0.05
0
0
0.27
1 %_Br
[
0.05 0 0 0 1 50 100 %_BS
%_0.05 0 0 0 1 50 100 Bs
0.05 0 0 0 1 50 84 %_BS
%_0.05 0 0 0 1 50 84 Bs
0.05 0 0 0.27 1 50 16 %_BS
%_0.05 0 0 0.27 1 50 16 Bs
0.05 0 0 0.27 1 50 0 %_BS
%_0.05 0 0 0.27 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 5)
(GradientFill 5) 0 2 Bd
[
<
1F1E1D1C1B1A1817161514131211100F0E0D0C0B0A09080706050403020100
>
0
0
0
1 %_Br
[
0 0 0 0 1 50 100 %_BS
%_0 0 0 0 1 50 100 Bs
0.12 0 0 0 1 50 0 %_BS
%_0.12 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 6)
(GradientFill 6) 0 2 Bd
[
<
1C1C1C1B1B1B1B1B1A1A1A1A1A
>
0
0
<
0D0C0B0A090706050403020100
>
1 %_Br
[
0.1 0 0 0 1 50 100 %_BS
%_0.1 0 0 0 1 50 100 Bs
0.11 0 0 0.05 1 50 0 %_BS
%_0.11 0 0 0.05 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (GradientFill 7)
(GradientFill 7) 0 4 Bd
[
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D
>
0 %_Br
<
CCCDCECFD0D1D2D3D4D5D6D7D8D9DADCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2
>
0 %_Br
<
4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374
75767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C
9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4
C5C6C7C8C9CACBCC
>
0 %_Br
[
0 0 0 0.7 1 50 100 %_BS
%_0 0 0 0.7 1 50 100 Bs
0 0 0 0.05 1 50 51 %_BS
%_0 0 0 0.05 1 50 51 Bs
0 0 0 0.2 1 50 24 %_BS
%_0 0 0 0.2 1 50 24 Bs
0 0 0 0.7 1 50 0 %_BS
%_0 0 0 0.7 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4003.5 4632.7251 m
-3789.8999 4632.7251 L
-3789.8999 4624.9243 L
-4003.5 4624.9243 L
-4003.5 4632.7251 L
n
0 O
0 0 0 1 k
-4003.5 4628.8252 m
-3993.4856 4631.3169 -3986.6863 4632.665 -3974.7007 4632.7251 c
-3961.7185 4632.79 -3896.6997 4632.7251 y
-3831.6816 4632.79 -3818.6997 4632.7251 v
-3806.7124 4632.665 -3799.9136 4631.3169 -3789.8999 4628.8252 C
-3799.9136 4626.3335 -3806.7124 4624.9854 -3818.6997 4624.9243 c
-3831.6816 4624.8589 -3896.6997 4624.9243 y
-3961.7185 4624.8589 -3974.7007 4624.9243 v
-3986.6863 4624.9854 -3993.4856 4626.3335 -4003.5 4628.8252 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7876 8505.29 m
-7778.2451 8505.29 L
-7778.2451 8484.5742 L
-7876 8484.5742 L
-7876 8505.29 L
n
0 O
0 g
1 XR
-7778.5586 8500.6084 m
-7793.8247 8486.8203 -7811.5537 8507.7393 -7826.9277 8495.4561 C
-7825.4199 8489.8037 -7819.7598 8496.7578 -7817.5176 8492.1113 C
-7817.4341 8490.5107 -7820.6313 8492.0107 -7820.5127 8489.8906 C
-7818.6245 8486.4814 -7813.8955 8486.9785 -7812.5664 8491.0273 C
-7806.3115 8489.0576 -7799.7734 8483.1143 -7793.7847 8484.9072 C
-7792.2671 8486.2578 -7793.0708 8487.4414 -7792.6211 8488.7178 C
-7785.2871 8484.2822 -7776.4644 8493.418 -7778.5586 8500.6084 C
f
-7822.2842 8502.2227 m
-7822.8247 8502.5986 -7821.9277 8503.71 -7822.2529 8504.1982 C
-7824.3237 8503.4463 -7826.6919 8499.3682 -7828.4731 8496.6006 C
-7828.2632 8498.1299 -7829.6641 8499.4541 -7831.0781 8497.2227 C
-7831.2383 8496.4053 -7830.3667 8496.1182 -7830.6729 8495.2266 C
-7831.8306 8493.6582 -7832.8472 8495.1436 -7833.7798 8494.915 C
-7834.3184 8494.1514 -7834.6143 8493.5088 -7834.6816 8492.9844 C
-7828.5537 8490.1641 -7821.9263 8501.9668 -7815.7456 8502.3926 C
-7815.9048 8505.4053 -7819.8555 8507.0908 -7822.2842 8502.2227 C
f
u
u
0 XR
-7819.1602 8496.9502 m
-7834.0142 8490.4102 -7855.4731 8494.6318 -7871.3687 8494.6094 c
-7877.2988 8494.6025 -7866.8965 8494.6113 -7872.8267 8494.6162 c
N
0 O
0 g
-7816.8052 8495.7295 m
-7834.1475 8488.5537 -7853.9341 8493.3457 -7872.0532 8493.2764 C
-7872.8608 8494.1631 -7873.6685 8495.0518 -7874.4751 8495.9375 C
-7873.6973 8495.9375 -7872.9194 8495.9365 -7872.1421 8495.9434 C
-7871.3345 8495.0557 -7870.5273 8494.1689 -7869.7202 8493.2822 C
-7870.3516 8493.292 -7870.9844 8493.2852 -7871.6157 8493.2852 c
-7873.3735 8493.2881 -7877.9165 8495.9521 -7874.0376 8495.9473 c
-7873.4063 8495.9473 -7872.7734 8495.9541 -7872.1421 8495.9434 c
-7870.4155 8495.916 -7865.8184 8493.3135 -7869.7202 8493.2822 c
-7870.4976 8493.2734 -7871.2759 8493.2764 -7872.0532 8493.2764 c
-7873.8081 8493.2754 -7878.3574 8495.9229 -7874.4751 8495.9375 c
-7857.1177 8496.0049 -7838.1025 8491.3037 -7821.5151 8498.1689 c
-7820.1035 8498.7539 -7814.8081 8496.5566 -7816.8052 8495.7295 c
-7816.8052 8495.7295 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7857.9658 8497.7275 m
-7876 8497.7275 L
-7876 8494.8525 L
-7857.9658 8494.8525 L
-7857.9658 8497.7275 L
-7857.9658 8497.7275 L
f
U
u
0.15 1 0.9 0.1 k
-7857.9658 8496.9902 m
-7874.5 8496.9902 L
-7874.5 8495.5908 L
-7857.9658 8495.5908 L
-7857.9658 8496.9902 L
-7857.9658 8496.9902 L
f
U
u
0 1 1 0 k
-7857.9658 8496.6025 m
-7873.5 8496.6025 L
-7873.5 8495.9766 L
-7857.9658 8495.9766 L
-7857.9658 8496.6025 L
-7857.9658 8496.6025 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 3)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7858 8497.7275 m
-7876 8497.7275 L
-7876 8494.8525 L
-7858 8494.8525 L
-7858 8497.7275 L
-7858 8497.7275 L
f
U
u
0.15 1 0.9 0.1 k
-7858 8496.9902 m
-7876 8496.9902 L
-7876 8495.5908 L
-7858 8495.5908 L
-7858 8496.9902 L
-7858 8496.9902 L
f
U
u
0 1 1 0 k
-7858 8496.6025 m
-7876 8496.6025 L
-7876 8495.9766 L
-7858 8495.9766 L
-7858 8496.6025 L
-7858 8496.6025 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7875.8833 8505.2451 m
-7784.0479 8505.2451 L
-7784.0479 8500.9658 L
-7875.8833 8500.9658 L
-7875.8833 8505.2451 L
n
0 O
0 0 0 1 k
-7875.6631 8502.5654 m
-7876 8502.6318 -7875.4814 8502.8213 -7875.8833 8502.6787 C
-7875.8379 8502.5605 -7875.7725 8502.4717 -7875.6631 8502.5654 C
f
-7785.1675 8502.7314 m
-7786.2524 8503.4941 -7787.6816 8502.7236 -7788.8701 8503.21 C
-7789.0098 8503.2422 -7788.8345 8502.792 -7789.1484 8502.8926 C
-7790.3008 8503.4854 -7792.1162 8503.1318 -7793.5195 8502.6748 C
-7793.4346 8502.5566 L
-7793.7017 8502.4717 -7794.0283 8502.8623 -7794.3115 8502.8076 C
-7794.3135 8502.7295 -7794.2207 8502.6963 -7794.2861 8502.5889 C
-7794.3574 8502.8252 -7794.7983 8502.6982 -7794.9185 8502.874 C
-7795.0303 8502.7822 -7795.0195 8502.5947 -7795.1641 8502.4912 C
-7795.3262 8502.7598 L
-7795.7769 8503.3994 -7796.4209 8502.7158 -7797.0361 8503.0459 C
-7797.0063 8502.9834 -7796.9453 8502.9346 -7796.9941 8502.874 C
-7797.9814 8503.2627 -7799.2168 8503.1904 -7800.3208 8503.333 C
-7800.2769 8503.2383 -7800.2363 8503.0654 -7800.3008 8502.958 C
-7800.3555 8503.2412 -7800.6963 8503.3125 -7800.9922 8503.3682 C
-7801.1255 8503.0771 -7801.4995 8503.6338 -7801.8467 8503.4736 C
-7801.8169 8503.4092 L
-7802.0732 8503.7139 -7802.1973 8503.2334 -7802.4053 8503.5986 C
-7802.5684 8503.3701 L
-7802.6807 8503.7803 -7802.9395 8503.1572 -7803.1514 8503.3662 C
-7803.1445 8503.4502 L
-7803.3442 8503.5498 -7803.4482 8503.3438 -7803.6338 8503.4131 C
-7803.6514 8503.3662 L
-7804.0854 8503.4736 -7804.3379 8503.2451 -7804.3271 8503.5654 C
-7804.4795 8503.3086 -7803.9063 8503.4482 -7804.1455 8503.0752 C
-7805.5732 8503.4053 -7807.0459 8503.3408 -7808.4834 8503.3467 C
-7808.6465 8503.2178 -7808.7505 8503.1787 -7808.7871 8503.0576 C
-7808.9307 8503.1221 -7809.3281 8503.1162 -7809.4585 8503.2803 C
-7809.4102 8503.2734 -7809.5513 8503.1162 -7809.6274 8503.1006 C
-7809.8887 8502.9795 -7809.9131 8503.4521 -7810.2002 8503.3086 C
-7810.0859 8503.2236 -7810.0469 8503.1201 -7810.0854 8503.001 C
-7810.3301 8503.251 -7810.6577 8503.2109 -7810.9473 8503.292 C
-7810.9023 8503.2383 -7810.8325 8503.2061 -7810.8433 8503.1055 C
-7811.1602 8503.3887 -7811.4209 8503.0459 -7811.6982 8503.2246 C
-7811.5947 8503.04 L
-7812.0415 8502.8154 -7811.7266 8503.4268 -7812.1128 8503.2939 C
-7812.02 8503.2354 -7812.0527 8503.1631 -7812.0361 8503.0879 C
-7812.3965 8503.4238 -7812.9795 8503.3125 -7813.3389 8503.4268 C
-7813.3174 8503.4014 -7813.3232 8503.3506 Y
-7813.7148 8503.3926 -7814.1245 8503.2881 -7814.5552 8503.4346 C
-7814.7119 8503.3525 -7814.5039 8502.9834 -7814.9185 8503.0518 C
-7814.9033 8503.4229 -7815.6221 8503.2041 -7815.3779 8503.624 C
-7815.7319 8503.5635 -7816.2925 8503.4238 -7816.5283 8503.5498 C
-7816.3691 8503.4092 -7816.7007 8503.0967 -7816.4063 8503.0654 C
-7816.6289 8502.8398 L
-7816.5957 8502.6885 -7816.3999 8502.8916 -7816.4707 8502.7002 C
-7816.6182 8502.7158 -7817.0479 8502.8623 -7817.1797 8502.8018 C
-7817.4531 8503.0293 -7817.7041 8503.4541 -7818.1465 8503.501 C
-7817.9385 8503.3564 -7818.2646 8503.0918 -7818.1235 8503.0283 C
-7818.7407 8503.7393 L
-7818.8877 8503.7568 -7818.7725 8503.4463 -7818.9854 8503.543 C
-7818.9746 8503.6416 -7819.0674 8503.7021 -7819.1318 8503.7822 C
-7819.1875 8503.7393 -7819.7441 8503.874 -7819.8081 8503.5088 C
-7819.8735 8503.3662 -7819.5684 8503.4326 -7819.7314 8503.3018 C
-7820.0029 8503.3057 -7820.0151 8503.4307 -7820.2871 8503.4365 C
-7820.2925 8503.3877 L
-7820.4717 8503.333 -7820.8213 8503.543 -7820.6265 8503.7451 C
-7820.5015 8503.7568 -7820.6738 8503.5254 -7820.4888 8503.6318 C
-7820.6152 8503.8438 -7820.9312 8503.9033 -7821.2031 8503.9072 C
-7821.1104 8503.8486 -7821.1216 8503.751 -7821.0845 8503.6475 C
-7821.4497 8503.9346 -7821.8369 8504.0254 -7822.2451 8504.1455 C
-7822.2515 8504.3193 -7822.0928 8503.8291 -7822.0327 8503.9209 C
-7822.5557 8503.6797 -7823.1128 8504.2627 -7823.5479 8503.9102 C
-7823.4766 8503.8799 -7823.5098 8504.1572 -7823.5146 8504.1084 C
-7823.7666 8504.0869 -7823.7549 8503.835 -7823.9189 8503.9277 C
-7823.9355 8503.7803 -7824.1255 8503.9756 -7824.2944 8504.0205 C
-7824.3818 8504.127 -7824.3384 8503.9482 -7824.1914 8503.9326 C
-7824.4268 8504.0576 -7825.3691 8504.2842 -7825.9131 8504.0693 C
-7825.9023 8504.167 -7826.2471 8504.4277 -7826.3721 8504.417 C
-7826.3232 8504.1885 L
-7826.4375 8504.0518 -7826.7422 8504.208 -7826.7632 8504.0127 C
-7827.0303 8504.29 -7825.7344 8503.7764 -7826.0957 8503.9902 C
-7826.1895 8503.7998 -7826.5991 8504.3545 -7826.5215 8504.043 C
-7826.7725 8504.0518 -7827.0161 8504.3086 -7827.2559 8504.0947 C
-7827.1865 8504.1318 -7827.0522 8503.7773 -7827.2549 8503.7939 C
-7827.6123 8503.835 -7827.3564 8503.9033 -7827.6465 8503.9795 C
-7827.8281 8504.0732 L
-7827.8398 8504.2959 -7828.1475 8504.043 -7828.0146 8504.292 C
-7828.0586 8504.1084 -7828.5337 8504.4053 -7828.4971 8504.0361 C
-7828.4473 8503.7451 L
-7828.6016 8503.7666 -7828.7002 8504.0518 -7828.8213 8504.1797 C
-7828.8418 8504.1533 -7828.8823 8504.0947 -7828.8745 8504.0479 C
-7828.8994 8504.4932 -7829.2432 8504.0107 -7829.4268 8504.3545 C
-7829.7505 8504.2002 -7830.2495 8504.3408 -7830.4023 8504.0635 C
-7830.6514 8504.1982 -7830.8784 8504.3584 -7831.1621 8504.2627 C
-7831.1055 8504.2207 -7831.0283 8504.208 -7831.0122 8504.1123 C
-7831.1904 8503.9814 -7831.2344 8504.0986 -7831.3975 8504.1709 C
-7831.3608 8504.1045 -7831.7539 8503.9102 -7831.9521 8503.7529 C
-7832.1992 8503.8857 -7832.1143 8504.126 -7832.1392 8504.2725 C
-7832.3652 8503.833 -7832.8379 8504.5557 -7833.1211 8504.1572 C
-7833.0352 8504.0967 -7832.7598 8503.9414 -7832.9658 8503.8311 C
-7833.1919 8503.3926 -7833.4219 8504.1553 -7833.7861 8503.9443 C
-7833.6968 8504.3086 L
-7833.8594 8504.083 -7834.2334 8504.5205 -7834.1963 8504.1494 C
-7834.3184 8504.2803 -7834.6265 8504.0283 -7834.5859 8504.3838 C
-7835.1846 8504.083 -7836.0425 8504.5654 -7836.4102 8503.9277 C
-7836.4961 8503.9873 -7836.7104 8503.9268 -7836.6665 8504.1094 C
-7836.5239 8504.3076 -7836.4673 8503.9678 -7836.4141 8504.1025 C
-7836.4912 8504.1133 -7836.5078 8504.2109 -7836.5161 8504.2598 C
-7836.7021 8504.1787 -7836.8486 8504.1533 -7836.6729 8503.8574 C
-7837.0869 8503.6377 -7837.1001 8504.4619 -7837.6274 8504.3232 C
-7837.6035 8504.1758 -7837.6436 8504.1201 -7837.7979 8504.1436 C
-7838.0903 8504.3955 L
-7838.4312 8504.3369 -7838.2842 8504.0605 -7838.2925 8503.8115 C
-7838.4746 8503.8545 -7838.6973 8503.8428 -7838.7803 8504.0283 C
-7839.0015 8503.7158 L
-7838.8398 8503.9414 -7839.1514 8503.8662 -7839.2368 8503.9268 C
-7839.1514 8503.8662 L
-7839.1846 8503.7598 -7839.3955 8503.8252 -7839.5024 8503.8564 C
-7839.4766 8504.0107 -7839.2617 8504.0732 -7839.1445 8504.1182 C
-7839.2373 8504.2275 -7839.3823 8504.2021 -7839.5059 8504.3311 C
-7839.4648 8504.0869 -7839.8027 8504.1572 -7839.9473 8504.1318 C
-7840.1133 8504.0791 -7840.1348 8504.3506 -7840.1831 8504.3428 C
-7840.1875 8504.2158 -7840.4541 8504.3213 -7840.3247 8504.1436 C
-7840.2681 8504.1025 -7840.1953 8504.2666 -7840.1016 8504.1553 C
-7840.2109 8504.0605 -7840.1982 8503.8398 -7840.4258 8504.001 C
-7840.5967 8504.1221 -7840.3818 8504.4834 -7840.7061 8504.3291 C
-7840.6211 8504.2686 -7840.6055 8504.1709 -7840.5391 8504.083 C
-7840.8433 8503.9561 L
-7840.8564 8504.1787 L
-7840.8975 8504.1221 -7840.8691 8504.1025 -7840.8877 8504.0732 C
-7840.9785 8504.3076 -7841.3521 8504.1455 -7841.4209 8504.4092 C
-7841.5742 8504.4326 -7841.7441 8504.2549 -7841.8906 8504.2295 C
-7841.8623 8504.21 L
-7842.0415 8504.0791 -7842.2793 8504.165 -7842.4297 8504.3154 C
-7842.4219 8504.2666 L
-7842.5195 8504.249 -7842.7505 8504.2842 -7842.8735 8504.415 C
-7843.1201 8504.2471 -7842.9561 8503.5742 -7843.2295 8503.8545 C
-7843.48 8503.8623 -7843.6221 8504.2627 -7843.5215 8504.4053 C
-7843.9717 8504.2549 -7844.4834 8504.6182 -7844.9009 8504.2725 C
-7844.9658 8504.3623 -7844.9248 8504.4189 -7845.0586 8504.4717 C
-7845.7197 8504.3838 -7846.4551 8504.7354 -7846.9814 8504.2979 C
-7846.79 8504.2041 -7846.9688 8504.0752 -7846.9727 8503.9482 C
-7847.1309 8504.1475 -7847.1631 8503.7412 -7847.2197 8504.083 C
-7847.2041 8504.2842 -7847.2197 8504.3818 -7847.0337 8504.4629 C
-7847.4282 8504.5713 -7848.0283 8504.5713 -7848.2471 8504.3838 C
-7848.1377 8504.4766 -7848.2227 8504.5381 -7848.3086 8504.5986 C
-7848.2803 8504.2773 -7848.5713 8504.2295 -7848.7915 8504.3428 C
-7848.8223 8504.5381 L
-7848.9658 8504.3369 L
-7849.0503 8504.3994 -7849.0591 8504.7471 -7849.2773 8504.5596 C
-7849.2891 8504.4834 -7849.3018 8504.4063 -7849.3418 8504.3506 C
-7849.5693 8504.5107 -7849.8906 8504.7822 -7850.1377 8504.6162 C
-7850.3398 8504.3311 L
-7850.4453 8504.3623 -7850.6235 8504.5342 -7850.4375 8504.6162 C
-7850.8594 8504.4443 -7851.1309 8504.4229 -7851.2646 8504.1758 C
-7851.9912 8504.7773 -7853.0459 8504.8018 -7853.8906 8504.7588 C
-7853.8652 8504.6123 L
-7854.0923 8504.4756 -7853.9834 8504.8682 -7854.1416 8504.7666 C
-7854.0684 8504.627 -7854.3145 8504.4629 -7854.1362 8504.292 C
-7854.4609 8504.1377 -7854.5547 8504.5459 -7854.7656 8504.6123 C
-7854.7979 8504.8047 -7854.5957 8504.4893 -7854.6367 8504.7334 C
-7854.6729 8504.8018 -7855.0859 8504.583 -7855.1362 8504.874 C
-7855.2178 8504.7598 -7855.1543 8504.5459 -7855.1104 8504.4277 C
-7855.3086 8504.5693 L
-7855.5513 8504.2295 -7854.7559 8503.9619 -7855.0107 8503.543 C
-7855.1934 8503.5889 L
-7855.3682 8503.2842 -7854.71 8503.2451 -7855.1689 8503.1406 C
-7855.3682 8503.2842 -7855.5381 8503.7061 -7855.3608 8503.835 C
-7855.7754 8503.915 -7855.5527 8504.5283 -7855.9985 8504.5039 C
-7856.1201 8504.333 -7855.6416 8504.4629 -7855.7275 8504.2236 C
-7855.9375 8503.9893 -7856.1484 8504.3545 -7856.3354 8504.2725 C
-7856.1279 8504.3818 -7856.3032 8504.6758 -7856.4375 8504.7295 C
-7856.6641 8504.5918 -7856.29 8504.4541 -7856.6113 8504.4238 C
-7856.6641 8504.5918 -7856.9595 8504.7178 -7856.7041 8504.835 C
-7856.8203 8505.2158 -7857.0381 8504.7295 -7857.2129 8505.0244 C
-7857.3174 8504.7568 -7856.8823 8504.4053 -7857.2354 8504.2715 C
-7857.1792 8504.5293 -7857.6704 8504.6221 -7857.4839 8505.0049 C
-7857.6221 8504.9307 -7857.6367 8504.7275 -7857.5361 8504.5693 C
-7857.7334 8504.4102 -7858.0151 8505.04 -7858.0801 8504.5283 C
-7858.1479 8504.792 L
-7858.21 8504.7061 -7858.2983 8504.6416 -7858.3994 8504.499 C
-7858.5732 8504.4941 -7858.96 8504.8564 -7858.9443 8504.458 C
-7859 8504.499 -7859.3975 8504.4814 -7859.2441 8504.7568 C
-7858.9971 8504.9248 -7858.96 8504.5557 -7858.8223 8504.9277 C
-7858.9971 8504.624 -7859.1787 8504.9678 -7859.3213 8505.0693 C
-7859.3447 8504.915 L
-7859.4297 8504.9756 -7859.6255 8504.9414 -7859.6787 8505.1084 C
-7859.6133 8505.0205 -7859.6475 8504.915 -7859.7148 8504.8779 C
-7859.8042 8505.1123 L
-7860.1494 8505.2295 -7859.8857 8504.7002 -7860.2217 8504.7686 C
-7859.9663 8504.5869 L
-7860.0225 8504.626 -7860.1367 8504.4063 -7860.2979 8504.4795 C
-7860.3604 8504.6934 -7860.4775 8504.9502 -7860.5313 8505.1162 C
-7860.7207 8505.21 -7860.6162 8504.875 -7860.8027 8505.0947 C
-7860.5586 8504.8369 L
-7860.5215 8504.7666 -7860.7231 8504.4834 -7860.9761 8504.4893 C
-7861.1377 8504.5635 -7861.3887 8504.8721 -7861.1338 8504.9893 C
-7861.2607 8504.9932 -7861.4385 8504.8623 -7861.3379 8504.7061 C
-7861.6255 8504.7803 -7861.2998 8504.9365 -7861.5479 8505.0693 C
-7861.6494 8504.9268 -7861.9658 8504.7236 -7862.1563 8504.5166 C
-7861.8975 8504.1582 L
-7862.0693 8504.1553 L
-7861.8467 8503.8682 -7862.1826 8503.9365 -7862.0566 8503.6338 C
-7862.1743 8503.5869 -7862.3169 8503.6895 -7862.4307 8503.7686 C
-7862.0864 8504.2529 -7862.8159 8504.4307 -7862.7158 8504.8721 C
-7863.1875 8504.9932 -7863.0107 8503.7979 -7863.5024 8504.4893 C
-7863.4219 8504.6045 -7863.6533 8504.9404 -7863.3564 8504.8125 C
-7863.6494 8504.7646 -7863.5557 8505.2559 -7863.9014 8505.0732 C
-7863.6455 8504.8916 -7864.1763 8504.626 -7863.8066 8504.3623 C
-7863.8311 8504.5088 -7863.6001 8504.4736 -7863.5435 8504.4326 C
-7863.6641 8504.2627 -7863.5186 8503.9873 -7863.8184 8503.9873 C
-7864.0015 8504.0293 -7864.2524 8504.0381 -7864.2158 8504.2686 C
-7864.2085 8504.5215 -7863.9365 8504.2412 -7864.0537 8504.4971 C
-7864.4185 8504.585 -7864.4795 8504.2002 -7864.6304 8504.6494 C
-7864.3999 8504.6133 -7864.3423 8504.874 -7864.3467 8505.0479 C
-7864.6143 8505.1533 L
-7864.5625 8504.9854 L
-7864.9922 8504.8643 -7864.6895 8505.29 -7865.1055 8505.2451 C
-7865.3008 8504.9131 L
-7865.2017 8504.627 -7864.6953 8505.04 -7864.7695 8504.5742 C
-7865.04 8504.5557 -7865.1299 8504.792 -7865.3848 8504.6719 C
-7865.3281 8504.6318 -7865.2505 8504.6201 -7865.1943 8504.5791 C
-7865.2915 8504.5635 -7865.3877 8503.9463 -7865.7734 8504.3076 C
-7865.9727 8504.4482 -7865.8262 8504.4736 -7865.8311 8504.6475 C
-7866.2656 8504.7002 -7866.3955 8504.8779 -7866.6753 8504.9053 C
-7866.6177 8504.5654 -7867.1699 8504.8721 -7866.8608 8504.5244 C
-7866.7188 8504.7236 -7866.0903 8504.7041 -7865.9365 8504.3799 C
-7866.0947 8503.9766 -7865.5952 8504.4365 -7865.5024 8504.0283 C
-7865.8506 8504.0186 -7865.8335 8503.6221 -7865.8896 8503.3623 C
-7865.9863 8503.3438 -7866.0801 8503.4541 -7866.1377 8503.4941 C
-7866.1787 8503.7393 -7866.0522 8503.7354 -7866.0449 8503.9873 C
-7866.4336 8503.9209 -7866.8081 8504.0576 -7867.0225 8504.2959 C
-7867.1523 8504.1748 -7867.1113 8503.9307 -7866.9575 8503.9072 C
-7867.4199 8503.9795 -7867.9141 8503.9463 -7868.3535 8503.8721 C
-7868.0693 8504.2715 -7868.8433 8503.9658 -7868.6494 8504.2979 C
-7868.4141 8504.3877 -7868.2119 8504.6719 -7868.3418 8504.8506 C
-7868.4888 8504.8252 -7868.3369 8504.6758 -7868.3984 8504.5908 C
-7868.5859 8504.8086 -7868.6895 8504.2412 -7868.8735 8504.585 C
-7868.4512 8504.4561 -7868.7915 8504.0986 -7868.7139 8503.7861 C
-7869.0186 8503.9619 -7868.7007 8503.5635 -7869.0024 8503.5635 C
-7869.3057 8503.7373 -7869.6787 8503.874 -7870.0161 8503.9414 C
-7870.4399 8503.6455 -7871.0898 8503.9365 -7871.4683 8503.9482 C
-7871.6665 8503.79 -7871.5322 8503.4365 -7871.7471 8503.375 C
-7871.9995 8503.3818 -7871.5601 8503.7568 -7871.9336 8503.5947 C
-7871.8975 8503.5244 L
-7872.0107 8503.6064 -7872.5825 8503.2842 -7872.6929 8503.792 C
-7872.5776 8503.4092 L
-7872.6475 8503.374 -7872.7119 8503.4619 -7872.7695 8503.5029 C
-7872.7725 8503.3779 -7872.8535 8503.2646 -7872.7402 8503.1826 C
-7872.9707 8502.9189 -7873.2241 8503.2246 -7873.4746 8503.2354 C
-7873.3135 8503.4619 L
-7873.7422 8503.6396 -7874.0293 8503.415 -7874.4443 8503.4941 C
-7874.4316 8503.2725 L
-7874.6787 8503.4053 L
-7874.6182 8503.1904 -7874.8447 8503.0518 -7874.9751 8503.2314 C
-7874.3335 8502.6885 L
-7874.1553 8502.8193 -7874.5283 8502.9561 -7874.4165 8503.1748 C
-7874.3213 8503.3662 -7873.9375 8503.3057 -7873.8755 8503.0918 C
-7874.0225 8503.0674 -7874.0293 8503.1162 -7874.1436 8503.1963 C
-7874.1919 8502.8877 -7873.9688 8502.8994 -7873.8584 8502.6934 C
-7873.9355 8502.7061 -7874.0449 8502.6123 -7874.0615 8502.71 C
-7873.9102 8502.5596 -7873.7578 8502.5361 -7873.5059 8502.5283 C
-7873.6763 8502.6494 -7873.4131 8502.7197 -7873.4775 8502.8076 C
-7873.4575 8502.5361 -7873.2168 8502.4521 -7872.9053 8502.5283 C
-7872.6831 8502.8428 -7872.3208 8502.3262 -7871.96 8502.4131 C
-7872.1064 8502.6885 -7872.2935 8502.9092 -7872.5127 8503.0205 C
-7872.2861 8503.1582 -7872.2607 8503.0127 -7872.0337 8503.1514 C
-7871.9238 8502.9463 -7871.8457 8502.6318 -7871.5503 8502.5068 C
-7871.5342 8502.71 L
-7871.2666 8502.6064 -7871.2666 8502.3057 -7870.9258 8502.3623 C
-7870.3418 8502.4619 -7869.7407 8502.4619 -7869.2949 8502.4873 C
-7869.2783 8502.6895 L
-7869.0303 8502.2559 -7868.4521 8502.5293 -7868.1182 8502.3369 C
-7867.5503 8502.5322 -7866.8848 8502.1436 -7866.5938 8502.4932 C
-7865.5913 8502.3369 -7864.7148 8502.1846 -7863.6768 8502.2588 C
-7863.8516 8502.5537 L
-7863.6655 8502.3369 -7863.7305 8502.7236 -7863.5479 8502.6797 C
-7863.7578 8502.4443 -7863.2949 8502.374 -7863.1665 8502.1934 C
-7862.7041 8502.4229 -7862.1104 8502.1729 -7861.7007 8501.9658 C
-7861.6846 8502.1689 L
-7861.2705 8501.7881 -7860.7759 8502.1221 -7860.2598 8502.1846 C
-7860.2007 8502.2686 -7860.1074 8502.459 -7859.9536 8502.4365 C
-7859.6738 8502.1084 -7859.5273 8502.1318 -7859.1167 8501.9268 C
-7858.8169 8501.9268 -7858.3301 8502.0078 -7858.0254 8502.1357 C
-7856.8975 8501.6748 -7855.7456 8501.9697 -7854.5732 8501.6924 C
-7854.4888 8501.9307 L
-7853.3521 8501.4209 -7851.9541 8501.8838 -7850.9839 8501.6221 C
-7851.0776 8502.0293 L
-7850.7734 8502.1553 -7850.3843 8501.9229 -7850.4619 8501.6338 C
-7850.1567 8501.7588 -7849.7007 8501.4365 -7849.5068 8501.7715 C
-7849.1953 8501.8467 -7849.1255 8501.583 -7848.8662 8501.5283 C
-7848.2422 8501.6826 -7848.0107 8501.6475 -7847.4224 8501.5713 C
-7847.5684 8501.5459 L
-7847.6328 8501.6357 -7847.6387 8501.8086 -7847.4922 8501.835 C
-7847.2725 8501.7217 -7846.6846 8501.9443 -7846.9033 8501.458 C
-7846.2754 8501.7393 -7845.4385 8501.2295 -7844.8271 8501.6084 C
-7844.8789 8501.4756 -7844.7246 8501.4502 -7844.6602 8501.3604 C
-7844.1089 8501.3545 -7843.5293 8501.626 -7843.0898 8501.3994 C
-7843.0024 8501.4658 -7843.2295 8501.626 -7843.0049 8501.6396 C
-7842.8721 8501.5889 -7843.0024 8501.4658 -7842.8384 8501.3916 C
-7841.9453 8501.1436 -7841.0303 8501.6475 -7840.2188 8501.583 C
-7838.7754 8501.3262 -7837.2695 8501.4561 -7835.8867 8501.4131 C
-7835.9023 8501.5107 L
-7835.4395 8501.1377 -7834.8159 8501.8926 -7834.4463 8501.3311 C
-7834.3369 8501.4238 -7834.0283 8501.375 -7834.1094 8501.5635 C
-7833.7407 8501.2998 -7833.0771 8501.8115 -7832.5439 8501.4766 C
-7832.5928 8501.4678 -7832.6211 8501.4873 -7832.6777 8501.5293 C
-7832.1392 8501.7451 -7831.6641 8501.4502 -7831.0957 8501.6455 C
-7831.1533 8501.6875 -7831.2583 8501.7178 -7831.2754 8501.8154 C
-7831.0557 8502.0029 -7830.7549 8501.4033 -7830.6348 8501.874 C
-7830.5088 8501.8701 -7830.5449 8501.6377 -7830.6221 8501.6514 C
-7829.3779 8501.835 -7828.0498 8501.5342 -7826.7549 8501.4268 C
-7825.8271 8501.708 -7826.6982 8502.2197 -7825.9663 8501.8682 C
-7825.9063 8501.959 -7825.9229 8501.6885 -7825.9131 8501.7861 C
-7825.6299 8501.6543 -7825.4717 8502.3115 -7825.2754 8502.0654 C
-7825.3564 8501.7764 -7825.1445 8501.9033 -7825.1387 8501.7275 C
-7824.5713 8501.915 -7824.4575 8502.1758 -7824.0098 8501.9561 C
-7824.0435 8502.1084 L
-7823.5186 8501.6787 -7822.9102 8501.9092 -7822.4673 8501.4131 C
-7819.5728 8501.3232 -7816.7983 8501.0479 -7813.9761 8500.9902 C
-7811.1865 8501.085 -7808.4551 8500.8623 -7805.6221 8501.126 C
-7804.9585 8501.5254 -7804.9087 8501.5146 -7804.1797 8501.3525 C
-7804.2095 8501.417 -7804.2549 8501.4326 -7804.2061 8501.4932 C
-7804.1699 8501.165 -7803.6929 8501.4619 -7803.6235 8501.1494 C
-7802.5762 8501.21 -7801.6113 8501.1201 -7800.5337 8501.1182 C
-7800.7041 8501.1533 -7800.7896 8501.4209 -7800.5869 8501.3994 C
-7800.3755 8501.1904 L
-7800.3408 8501.2822 L
-7800.2021 8501.2334 -7800.0513 8501.0713 -7800.1943 8500.9658 C
-7797.4873 8500.6826 -7794.8242 8501.3408 -7792.1729 8501.2598 C
-7791.5435 8501.3965 -7790.6475 8501.2715 -7789.9629 8501.2041 C
-7787.9355 8501.6416 -7786.1079 8501.9941 -7784.0479 8501.6885 C
-7784.3169 8502.5361 -7785.1675 8502.7314 V
f
-7875.2578 8502.5322 m
-7875.1855 8502.6963 -7874.9497 8502.7861 -7875.1377 8503.0049 C
-7875.1611 8502.8506 -7875.2822 8502.6787 -7875.2578 8502.5322 C
f
-7868.9619 8504.2197 m
-7868.9536 8504.1709 -7868.8721 8504.2861 -7868.8521 8504.3125 C
-7868.9297 8504.3252 -7869.0024 8504.4629 -7869.0645 8504.3779 C
-7868.9854 8504.3662 -7868.9976 8504.2881 -7868.9619 8504.2197 C
f
-7867.3521 8504.3174 m
-7867.3765 8504.4629 -7867.7207 8504.5791 -7867.9238 8504.5967 C
-7867.3521 8504.3174 L
f
-7865.8521 8504.9189 m
-7865.7227 8505.042 -7865.7583 8505.1094 -7865.9326 8505.1055 C
-7865.9453 8505.0283 -7865.8877 8504.9893 -7865.8521 8504.9189 C
f
-7865.7456 8504.5869 m
-7865.6211 8504.583 -7865.5591 8504.6689 -7865.4985 8504.7529 C
-7865.5029 8504.627 -7865.7871 8504.8311 -7865.7456 8504.5869 C
f
-7862.4893 8505.0107 m
-7862.4111 8504.999 -7862.2417 8504.8779 -7862.1689 8505.04 C
-7862.2505 8504.9268 -7862.5498 8505.2246 -7862.4893 8505.0107 C
f
-7860.9761 8504.79 m
-7860.9272 8504.7998 -7860.9072 8504.8262 -7860.8506 8504.7861 C
-7860.7607 8504.8525 -7860.8555 8504.959 -7860.9312 8504.9727 C
-7860.9761 8504.79 L
f
-7833.4287 8504.2041 m
-7833.5923 8504.2764 L
-7833.5684 8504.1318 L
-7833.4287 8504.2041 L
f
-7821.3574 8504.1963 m
-7821.1943 8504.1045 -7821.2441 8504.333 -7821.2168 8504.3545 C
-7821.3643 8504.3701 -7821.1621 8504.1748 -7821.3574 8504.1963 C
f
-7814.8486 8503.4678 m
-7814.8984 8503.4717 L
-7814.8818 8503.1729 L
-7814.8486 8503.4678 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
u
0 Ap
0 O
0 0 0 1 k
-7865.5625 8505.29 m
-7868.4375 8505.29 L
-7868.4375 8496.79 L
-7868.4375 8495.7217 -7867.5684 8494.8525 -7866.5 8494.8525 C
-7857.9165 8494.8525 L
-7857.9165 8497.7275 L
-7865.5625 8497.7275 L
-7865.5625 8505.29 L
-7865.5625 8505.29 L
f
U
u
0.15 1 0.9 0.1 k
-7866.2998 8505.29 m
-7867.7002 8505.29 L
-7867.7002 8496.79 L
-7867.7002 8496.1289 -7867.1621 8495.5908 -7866.5 8495.5908 C
-7857.9165 8495.5908 L
-7857.9165 8496.9902 L
-7866.2998 8496.9902 L
-7866.2998 8505.29 L
-7866.2998 8505.29 L
f
U
u
0 1 1 0 k
-7866.6875 8505.29 m
-7867.3125 8505.29 L
-7867.3125 8496.79 L
-7867.3125 8496.3428 -7866.9482 8495.9766 -7866.5 8495.9766 C
-7857.9165 8495.9766 L
-7857.9165 8496.6025 L
-7866.5 8496.6025 L
-7866.6035 8496.6025 -7866.6875 8496.6875 -7866.6875 8496.79 C
-7866.6875 8505.29 L
-7866.6875 8505.29 L
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9727 8505.29 m
-7849.9727 8479.2617 L
-7876 8479.2617 L
-7876 8505.29 L
-7849.9727 8505.29 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7876 8487.9365 m
-7849.9727 8487.9365 l
S
0.64 0.650477 0.701045 0.510735 K
-7876 8496.6143 m
-7849.9727 8496.6143 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7876 8492.2754 m
-7849.9727 8492.2754 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7854.5742 8492.3018 m
-7854.3442 8492.0303 -7854.6914 8491.7441 -7855 8491.5332 c
-7855.1118 8491.4561 -7855.5215 8491.6689 -7855.7466 8491.5029 c
-7856.0439 8491.2852 -7856.1826 8491.1982 -7856.4824 8491.2041 c
-7856.6455 8491.208 -7857.0435 8491.3379 -7857.1895 8491.3682 c
-7857.5679 8491.4443 -7857.8022 8491.6416 -7858.3672 8491.5449 c
-7858.7344 8491.4814 -7858.8286 8491.3906 -7858.9233 8491.4385 c
-7859.1118 8491.5801 -7859.2202 8491.8037 -7859.4258 8491.8525 c
-7859.9575 8491.9795 -7860.3535 8492.0234 -7860.8818 8492.0127 c
-7861.3047 8492.0029 -7862.4185 8492.0713 -7863.2866 8491.9717 c
-7863.6226 8491.9316 -7863.6025 8491.5068 -7863.7695 8491.5029 c
-7863.8618 8491.501 -7863.7646 8491.8164 -7863.8306 8491.8369 c
-7864.1694 8491.9434 -7864.4702 8490.793 -7864.6943 8490.8623 c
-7864.8047 8490.8975 -7864.5562 8491.4434 -7864.6729 8491.4717 c
-7864.8975 8491.5273 -7865.2178 8490.5088 -7865.4321 8490.5713 c
-7865.5635 8490.6084 -7865.2886 8491.0283 -7865.4375 8491.0967 c
-7865.6655 8491.2012 -7865.9087 8490.3252 -7866.1064 8490.4238 C
-7866.1543 8490.4717 -7865.7295 8491.2275 -7866.1685 8491.1689 c
-7866.2871 8491.1514 -7866.5054 8490.6035 -7866.5801 8490.6299 c
-7866.6919 8490.6699 -7866.3535 8491.0918 -7866.4897 8491.2178 C
-7866.7681 8491.4443 -7867.3711 8490.4531 -7867.4575 8490.5244 c
-7867.5791 8490.626 -7867.1279 8491.3877 -7867.2695 8491.4561 C
-7867.4497 8491.7197 -7868.0142 8490.8428 -7868.0889 8490.8916 c
-7868.1777 8490.9502 -7867.9058 8491.3281 -7867.8799 8491.5234 c
-7867.8545 8491.7178 -7867.9966 8491.8516 -7868.2144 8491.7998 c
-7868.4736 8491.7373 -7868.8696 8490.9316 -7868.9727 8491.0254 C
-7869.0791 8491.0811 -7868.8682 8491.3682 -7868.7954 8491.6025 c
-7868.7583 8491.7178 -7868.8882 8491.8916 -7869.0298 8491.8916 c
-7869.3135 8491.9395 -7869.6255 8491.2881 -7869.7065 8491.3926 c
-7869.7524 8491.4521 -7869.5898 8491.7803 -7869.7295 8491.8779 c
-7869.8994 8491.9961 -7870.3115 8491.5283 -7870.4521 8491.583 C
-7870.5361 8491.6318 -7870.4126 8491.8867 -7870.4927 8491.9434 c
-7870.7295 8492.1094 -7871.0039 8491.7109 -7871.0513 8491.7588 C
-7871.1167 8491.7813 -7871.1201 8491.8262 -7871.2793 8491.9307 c
-7871.4736 8492.0576 -7871.5254 8492.1387 -7871.5425 8492.2549 c
-7871.5654 8492.373 -7871.3135 8492.665 -7871.1655 8492.6396 c
-7870.8223 8492.5801 -7870.8662 8493.1396 -7870.6328 8493.0059 c
-7870.5679 8492.9697 -7870.6592 8492.5488 -7870.4199 8492.5557 c
-7870.0488 8492.5684 -7869.9858 8493.1113 -7869.7817 8493.1006 c
-7869.6406 8493.0938 -7869.8521 8492.4736 -7869.6328 8492.5508 c
-7869.4751 8492.6064 -7869.0063 8493.5918 -7868.9795 8493.5 c
-7868.8975 8493.2324 -7869.0703 8492.6885 -7868.9409 8492.6982 c
-7868.7568 8492.7129 -7868.5078 8493.6074 -7868.2544 8493.7275 c
-7868.1826 8493.7627 -7868.3774 8492.8906 -7868.1958 8492.8867 C
-7868.0898 8492.9365 -7867.7578 8493.7393 -7867.6274 8493.7881 C
-7867.5591 8493.7725 -7867.5879 8493.415 -7867.5176 8493.3945 c
-7867.4688 8493.3799 -7867.2817 8493.8555 -7867.21 8493.8135 c
-7867.1055 8493.7529 -7867.2471 8493.2822 -7867.0889 8493.2129 c
-7866.9175 8493.1387 -7866.4878 8494.1826 -7866.3486 8494.0879 c
-7866.2769 8494.04 -7866.3574 8493.5 -7866.21 8493.5361 c
-7866.0718 8493.5684 -7865.9414 8493.9043 -7865.8081 8493.9326 c
-7865.7295 8493.9482 -7865.7935 8493.4814 -7865.7495 8493.4639 c
-7865.5889 8493.4053 -7865.2329 8493.9619 -7865.0688 8493.8135 c
-7864.8584 8493.625 -7864.9395 8493.2598 -7864.8345 8493.2725 c
-7864.6274 8493.2959 -7864.4912 8493.5332 -7864.4146 8493.4736 c
-7864.2642 8493.3584 -7864.3281 8493.0693 -7864.0527 8492.9824 c
-7863.8975 8492.9326 -7863.7935 8493.2246 -7863.7495 8493.2207 c
-7863.6738 8493.2178 -7863.6782 8493.1201 -7863.6665 8493.0146 c
-7863.6328 8492.751 -7863.6064 8492.6895 -7863.4878 8492.667 c
-7863.0854 8492.6436 -7862.5625 8492.5742 -7862.1807 8492.5654 c
-7861.6274 8492.5508 -7860.2607 8492.5273 -7860.1182 8492.5273 c
-7860 8492.5029 -7859.7432 8492.6846 -7859.6689 8492.751 c
-7859.4678 8492.9355 -7859.2998 8493.1494 -7858.9858 8493.4102 c
-7858.8906 8493.4912 -7858.8081 8493.4707 -7858.7378 8493.4463 c
-7858.5249 8493.375 -7858.4585 8493.3232 -7858.2202 8493.292 c
-7857.9175 8493.249 -7857.4272 8493.3389 -7857.1245 8493.4326 c
-7856.6035 8493.5918 -7856.5264 8493.6143 -7856.0977 8493.5654 c
-7855.6992 8493.5195 -7855.0586 8493.4482 -7855.0479 8493.1006 c
-7855.0415 8492.8857 -7854.9414 8492.7334 -7854.5742 8492.3018 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9722 8505.29 m
-7849.9722 8479.2627 L
-7876 8479.2627 L
-7876 8505.29 L
-7849.9722 8505.29 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7858.6455 8492.2793 m
-7849.9736 8492.2793 l
S
-7862.9839 8505.29 m
-7862.9839 8496.6143 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7858.7202 8487.9404 m
-7849.9727 8487.9404 l
S
-7867.3232 8505.2891 m
-7867.3232 8495.9355 l
S
0.64 0.650477 0.701045 0.510735 K
-7858.6504 8505.2891 m
-7858.6504 8502.877 l
-7855.9937 8502.6533 -7854.3096 8500.9502 v
-7852.6064 8499.2236 -7852.3774 8496.6182 y
-7849.9727 8496.6182 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7866.8418 8489.4756 m
-7866.8418 8489.54 -7866.8218 8489.5811 -7866.7783 8489.5811 c
-7866.6943 8489.5811 -7866.4634 8489.2441 -7866.3994 8489.2441 c
-7866.3154 8489.2441 -7866.2729 8489.2861 -7866.2729 8489.3916 c
-7866.2729 8489.4756 -7866.5264 8490.3828 y
-7866.5264 8490.4238 -7866.5264 8490.4238 -7866.5049 8490.4238 c
-7866.4414 8490.4238 -7866.0615 8489.877 -7865.9351 8489.877 c
-7865.9146 8489.877 -7865.8936 8489.8975 -7865.8936 8489.9189 c
-7866.1675 8490.8252 -7866.1675 8491.0156 v
-7866.1675 8491.0791 -7866.1675 8491.1006 -7866.1465 8491.1006 c
-7866.1055 8491.1006 -7865.6826 8490.5303 -7865.5562 8490.5303 c
-7865.5352 8490.5303 -7865.5137 8490.5508 -7865.5137 8490.5723 c
-7865.5137 8490.6357 -7865.7666 8491.374 -7865.7666 8491.542 c
-7865.7666 8491.585 -7865.7666 8491.585 -7865.7446 8491.585 c
-7865.6826 8491.585 -7865.4722 8491.374 -7865.4297 8491.374 c
-7865.4082 8491.374 -7865.3882 8491.3955 -7865.3882 8491.416 c
-7865.3882 8491.4365 -7865.4927 8491.7959 -7865.4927 8491.8799 c
-7865.4927 8491.9014 -7865.4927 8491.9014 -7865.4722 8491.9014 c
-7865.4297 8491.9014 -7865.0918 8491.542 -7865.0078 8491.542 c
-7864.9658 8491.542 -7864.9233 8491.585 -7864.9233 8491.6689 c
-7864.9233 8491.8174 -7865.1138 8492.5342 -7865.1138 8492.5762 c
-7865.1138 8492.6602 -7865.0918 8492.7021 -7865.0498 8492.7021 c
-7864.9658 8492.7021 -7864.7119 8492.3857 -7864.6494 8492.3857 c
-7864.5854 8492.3857 -7864.5439 8492.4063 -7864.5439 8492.4707 c
-7864.5854 8492.8916 L
-7864.5854 8492.9561 -7864.5854 8492.9756 -7864.5654 8492.9756 c
-7864.5225 8492.9756 -7864.2915 8492.6816 -7864.2065 8492.6816 c
-7864.1006 8492.6816 -7864.1006 8493.167 -7864.1006 8493.2295 c
-7864.1006 8493.335 -7864.0166 8493.4189 -7863.8896 8493.4189 c
-7863.8057 8493.4189 -7863.4678 8493.1875 -7863.4473 8493.1875 c
-7863.3623 8493.1875 -7863.3198 8493.6299 -7863.2568 8493.6299 c
-7863.1943 8493.6299 -7862.9199 8493.5029 -7862.8564 8493.5029 c
-7862.6455 8493.5029 -7862.6035 8493.5889 -7862.6035 8493.7568 c
-7862.6255 8493.9043 L
-7862.6255 8493.9463 -7862.6035 8493.9463 -7862.5835 8493.9463 c
-7862.4985 8493.9463 -7862.2241 8493.6719 -7862.1392 8493.6719 c
-7861.9287 8493.6719 -7859.8198 8495.7393 -7859.5454 8496.0127 c
-7859.3984 8496.1807 -7859.3984 8496.4766 -7859.3984 8496.6035 c
-7859.3984 8497.4678 -7859.3984 8497.5518 -7859.2295 8497.6357 c
-7858.5977 8497.8896 -7858.5127 8498.0371 -7857.7334 8499.3232 c
-7857.6479 8499.4707 -7856.7407 8500.083 -7856.5942 8500.083 c
-7856.4878 8500.083 -7856.1094 8499.8291 -7856.0239 8499.8291 c
-7855.9194 8499.8291 -7855.8135 8499.8926 -7855.8135 8500.0605 c
-7855.8135 8500.5039 -7856.3408 8501.0107 -7856.9312 8501.0107 c
-7857.7534 8501.0107 -7858.0913 8500.3135 -7858.1338 8499.915 c
-7858.1543 8499.7666 -7858.2393 8499.6816 -7858.3447 8499.6816 c
-7858.3862 8499.6816 -7858.4287 8499.7021 -7858.4702 8499.7666 c
-7858.9561 8500.5674 -7859.9473 8501.0107 -7860.7065 8501.0107 c
-7861.7393 8501.0107 -7862.8774 8500.3779 -7863.3418 8500.1045 c
-7863.7842 8499.8516 -7864.4814 8499.6816 -7864.8809 8499.6816 c
-7865.3242 8499.6816 -7865.3662 8499.8291 -7865.3662 8500.083 c
-7865.3662 8500.2305 -7864.9023 8500.6719 -7864.9023 8500.7998 c
-7864.9023 8500.9258 -7865.0498 8501.0107 -7865.4082 8501.0107 c
-7865.8936 8501.0107 -7866.5679 8500.293 -7866.5679 8499.5137 c
-7866.5679 8498.9014 -7865.7666 8498.375 -7865.3022 8498.375 c
-7864.3755 8498.375 -7864.0942 8498.7334 -7863.5264 8499.1973 c
-7863.4414 8499.2598 -7863.3774 8499.2822 -7863.3359 8499.2822 c
-7863.1895 8499.2822 -7863.1895 8498.1846 -7863.1895 8498.0596 c
-7863.1895 8497.9102 -7863.2729 8497.8477 -7863.3774 8497.8477 c
-7865.7822 8497.8477 -7870.6592 8496.624 -7872.3672 8490.4678 c
-7872.4297 8490.2559 -7872.5361 8490.1514 -7872.6406 8490.1514 c
-7872.7881 8490.1514 -7873.7793 8490.9941 -7873.7793 8492.5762 c
-7873.7793 8494.4102 -7872.5767 8495.3799 -7871.9873 8495.3799 c
-7871.8398 8495.3799 -7871.6494 8495.3594 -7871.6494 8495.2109 c
-7871.6494 8495.1484 -7871.6929 8495.085 -7871.7759 8494.9795 c
-7872.1143 8494.6436 -7872.3672 8494.0098 -7872.3672 8493.6934 c
-7872.3672 8493.4814 -7872.2607 8493.3135 -7872.1143 8493.3135 c
-7871.9033 8493.3135 -7871.5654 8494.2627 -7871.46 8494.4102 c
-7871.3335 8494.6211 -7870.9546 8495.001 -7870.2378 8495.5283 c
-7869.4995 8496.0537 -7868.0654 8497.3623 -7868.0654 8498.627 c
-7868.0654 8499.999 -7869.1191 8500.9053 -7869.9209 8500.9053 c
-7870.7007 8500.9053 -7871.6714 8500.3779 -7872.0713 8499.8926 c
-7872.7041 8499.1553 -7873.3154 8498.585 -7873.8218 8498.585 c
-7874.1592 8498.585 -7874.3066 8498.7959 -7874.3066 8499.0068 c
-7874.3066 8499.3438 -7874.0537 8499.5762 -7873.5479 8499.6182 c
-7872.9575 8499.6611 -7872.8936 8500.083 -7872.8936 8500.4189 c
-7872.8936 8500.6934 -7873.4209 8501.0107 -7873.8433 8501.0107 c
-7874.4751 8501.0107 -7875.2974 8500.3135 -7875.2974 8498.4805 c
-7875.2974 8496.9824 -7874.0537 8496.5195 -7873.5679 8496.5195 c
-7873.1265 8496.5195 -7872.4722 8496.6035 -7872.0928 8496.9404 c
-7870.8066 8498.1436 -7870.1318 8498.3525 -7869.5835 8498.3525 c
-7869.3721 8498.3525 -7869.2881 8498.3525 -7869.2881 8498.501 c
-7869.2881 8498.8174 -7870.0474 8499.0068 -7870.1318 8499.0283 c
-7870.3423 8499.0908 -7870.5103 8499.3232 -7870.5103 8499.5342 c
-7870.5103 8500.0195 -7870.2378 8500.04 -7869.8774 8500.04 c
-7869.5215 8500.04 -7868.8042 8499.6816 -7868.8042 8498.4805 c
-7868.8042 8497.4893 -7869.9424 8496.3291 -7870.4058 8496.0977 c
-7870.7007 8495.9277 -7871.5874 8495.9502 -7871.9458 8495.9072 c
-7872.6406 8495.8223 -7874.4121 8494.875 -7874.4121 8492.3857 c
-7874.4336 8490.9727 -7873.1265 8489.6455 -7872.8511 8489.4561 c
-7872.6826 8489.3486 -7872.5986 8489.2227 -7872.5986 8489.0537 c
-7872.5986 8488.8428 -7872.6626 8485.9121 -7872.9995 8485.9121 c
-7873.4424 8485.9121 -7873.5054 8485.9121 -7873.5054 8486.1035 c
-7873.21 8487.1982 -7873.21 8487.4307 v
-7873.21 8487.7471 -7873.4424 8489.2227 -7874.3066 8489.2227 c
-7874.5806 8489.2227 -7875.0449 8488.9902 -7875.0449 8488.6748 c
-7875.0449 8488.3799 -7874.3486 8487.1777 -7874.3486 8486.9033 c
-7874.3486 8486.418 -7874.3921 8486.3975 -7875.0654 8485.7861 c
-7875.2559 8485.6387 -7875.3193 8485.5127 -7875.3193 8485.3213 c
-7875.3193 8485.1533 -7875.2134 8485.0254 -7875.0449 8485.0254 c
-7874.8975 8485.0254 -7874.3281 8485.3018 -7874.2017 8485.3213 c
-7874.0752 8485.3213 -7873.8433 8485.3428 -7873.6538 8485.3428 c
-7873.2734 8485.3428 -7873.0845 8485.2158 -7873.0845 8485.0898 c
-7873.0845 8484.8574 -7873.0845 8484.1836 -7873.9263 8482.7275 c
-7874.1167 8482.3906 -7875.2974 8481.0625 -7875.2974 8480.7246 c
-7875.2974 8480.5557 -7875.2134 8480.5361 -7875.1089 8480.5361 c
-7874.9185 8480.5361 -7874.4966 8480.957 -7874.3706 8481.1045 c
-7873.1265 8482.4326 -7872.3042 8483.8662 -7871.9238 8485.1318 c
-7871.8398 8485.4482 -7871.7344 8485.3643 -7871.5654 8485.3857 c
-7869.4155 8485.8916 -7867.3271 8488.4004 -7867.3271 8488.4219 c
-7867.4326 8488.6953 -7867.4326 8488.7588 v
-7867.4326 8488.8857 -7867.3271 8488.9072 -7867.3057 8488.9072 c
-7867.2432 8488.9072 -7867.0527 8488.6953 -7867.0103 8488.6953 c
-7866.9058 8488.6953 -7866.7783 8488.7803 -7866.7783 8488.9277 C
-7866.8418 8489.4756 l
f
0 D
-7870.1104 8487.9795 m
-7869.5215 8487.9795 -7869.0986 8488.085 -7868.6982 8488.3584 c
-7868.6553 8488.3799 -7868.6138 8488.4004 -7868.5928 8488.4004 c
-7868.5498 8488.4004 -7868.5498 8488.3799 -7868.5498 8488.3369 c
-7868.5498 8487.916 -7870.4272 8485.9561 -7871.5654 8485.9561 c
-7871.6289 8485.9561 -7871.6714 8485.9971 -7871.6714 8486.0596 c
-7871.6714 8486.25 -7871.5874 8488.2529 -7871.2495 8488.2529 c
-7871.1865 8488.2529 -7871.1016 8488.2314 -7871.0386 8488.1904 c
-7870.7007 8488.042 -7870.4902 8487.9795 -7870.1104 8487.9795 c
f
-7869.5835 8490.7412 m
-7869.5835 8490.3193 -7869.5625 8489.8555 -7868.8662 8489.8555 c
-7868.2334 8489.8555 -7867.6431 8490.5098 -7867.4961 8490.6572 c
-7867.4326 8490.6992 -7867.3906 8490.7197 -7867.3486 8490.7197 c
-7867.3271 8490.7197 -7867.2847 8490.6777 -7867.2847 8490.6357 c
-7867.2847 8490.1924 -7868.6553 8488.5273 -7870.0049 8488.5273 c
-7870.2578 8488.5273 -7871.2705 8488.6953 -7871.2705 8489.2441 c
-7871.2705 8489.4971 -7870.8906 8490.8682 -7870.2793 8491.9434 c
-7868.9087 8494.4316 -7864.7119 8495.9902 -7862.8145 8495.9902 c
-7861.9072 8496.0127 -7861.6118 8495.6963 -7861.4863 8495.6748 c
-7861.4648 8495.6748 -7861.4438 8495.6543 -7861.4233 8495.6543 c
-7861.3174 8495.6543 -7861.1904 8495.7178 -7861.1904 8495.8652 c
-7861.1904 8495.8867 -7861.2119 8495.8867 v
-7861.3594 8497.0244 -7861.4014 8497.4258 -7861.4014 8498.6895 c
-7861.4014 8500.083 -7861.4014 8500.209 -7860.4321 8500.209 c
-7859.1455 8500.209 -7858.8506 8499.1338 -7858.8506 8498.9014 c
-7858.8506 8498.4805 -7859.4399 8498.1846 -7859.5889 8498.1846 c
-7859.7358 8498.1846 -7859.9058 8498.292 -7859.9058 8498.4805 c
-7859.9058 8498.7754 -7859.9473 8498.9229 -7860.2207 8498.9229 c
-7860.4951 8498.9229 -7860.4951 8498.5645 -7860.4951 8498.458 c
-7860.4951 8498.2061 -7860.3896 8497.9531 -7860.1782 8497.8262 c
-7859.7998 8497.5732 -7859.7998 8497.1729 -7859.7998 8496.9619 c
-7859.7998 8496.8564 -7859.7998 8496.7295 -7859.8198 8496.624 c
-7859.8418 8496.4561 -7861.7817 8494.4102 -7862.0977 8494.4102 c
-7862.2446 8494.4102 -7862.5615 8494.5566 -7863.4258 8494.5566 c
-7865.5767 8494.5566 -7866.5474 8492.8291 -7866.7378 8492.3018 c
-7866.9897 8491.585 -7867.7915 8491.2891 -7868.0225 8491.2891 c
-7868.2129 8491.2891 -7868.2129 8491.332 -7868.2129 8491.7324 c
-7868.2129 8491.8174 -7868.4238 8492.1533 y
-7868.4238 8492.3438 -7867.3906 8492.5967 -7867.3906 8492.7861 c
-7867.3906 8492.9561 -7867.5801 8492.9756 -7867.7271 8492.9756 c
-7867.8115 8492.9756 -7868.8882 8492.9756 -7869.3306 8492.1533 c
-7869.5415 8491.7529 -7869.5835 8491.1846 -7869.5835 8490.7412 c
f
1 D
-7865.4927 8488.4854 m
-7865.4927 8488.4414 -7865.5137 8488.4219 -7865.5352 8488.4219 c
-7865.5986 8488.4219 -7865.7666 8488.7588 -7865.8506 8488.7588 c
-7865.9146 8488.7588 -7865.9995 8488.6748 -7866.0415 8488.5684 c
-7866.0615 8488.4854 -7866.1255 8488.0205 -7866.21 8488.0205 c
-7866.2524 8488.0205 -7866.4209 8488.2529 -7866.4634 8488.2529 c
-7866.6104 8488.2529 -7866.7158 8488.0205 -7866.7158 8487.8115 c
-7866.7158 8487.7051 -7866.7783 8487.7051 -7866.9263 8487.7051 c
-7867.5166 8487.7051 -7869.1406 8485.5332 -7869.5625 8483.7822 c
-7869.6055 8483.6143 -7869.5835 8483.4668 -7869.8994 8483.3604 c
-7872.0713 8482.624 -7874.5176 8480.4717 -7874.5176 8480.3457 c
-7874.5176 8480.1982 -7874.4336 8480.1143 -7874.3066 8480.1143 c
-7874.2432 8480.1143 -7874.1592 8480.1143 -7873.6538 8480.4502 c
-7872.7681 8481.041 -7870.7217 8482.3281 -7869.8994 8482.3281 c
-7869.6265 8482.3281 -7869.6055 8481.9697 -7869.6055 8481.7158 c
-7869.6055 8481.5254 -7869.6265 8481.2939 -7869.6265 8481.1475 c
-7869.6465 8480.873 -7869.9634 8480.5557 -7869.9634 8480.3877 c
-7869.9634 8480.2402 -7869.8154 8480.1348 -7869.6465 8480.1348 c
-7869.4575 8480.1348 -7869.3306 8480.1563 -7869.1606 8480.3457 c
-7868.8662 8480.6826 -7868.7402 8480.8311 -7868.4238 8480.8311 c
-7868.1914 8480.8311 -7867.1377 8480.1143 -7866.8838 8480.1143 c
-7866.5679 8480.1143 -7866.1895 8480.5986 -7866.1895 8480.8945 c
-7866.1895 8481.6318 -7867.0942 8482.2227 -7867.6431 8482.2227 c
-7868.0225 8482.2227 -7868.4438 8482.0967 -7868.6353 8481.8643 c
-7868.6982 8481.7998 -7868.7607 8481.7588 -7868.8242 8481.7588 c
-7868.9937 8481.7588 -7869.1191 8482.2227 -7869.1191 8482.2646 c
-7869.1191 8482.6875 -7866.2729 8482.749 -7865.9146 8482.749 c
-7865.7666 8482.749 -7865.6401 8482.665 -7865.5352 8482.4961 c
-7865.3447 8482.2021 -7864.1855 8480.9795 -7862.6255 8480.9795 c
-7860.79 8480.9795 -7859.0825 8482.2422 -7859.0825 8484.1406 c
-7859.0825 8484.2471 -7859.1245 8484.7939 -7859.1245 8484.8164 c
-7859.1245 8484.8799 -7858.0063 8486.6289 -7856.6782 8486.6289 c
-7855.6245 8486.6289 -7855.2656 8486.04 -7855.2656 8485.5537 c
-7855.2656 8485.3213 -7855.3711 8484.6689 -7855.8984 8484.6689 c
-7856.1094 8484.6689 -7856.2144 8484.8799 -7856.2144 8485.2588 c
-7856.2144 8485.3428 -7856.0039 8485.7227 -7856.0039 8485.8281 c
-7856.0039 8485.8701 -7856.0239 8485.8916 -7856.0879 8485.8916 c
-7856.4258 8485.8916 -7856.9521 8485.5332 -7857.1846 8484.8799 c
-7857.4595 8484.1631 -7857.8594 8483.4668 -7858.1958 8483.0654 c
-7858.5127 8482.708 -7858.6182 8482.1162 -7858.6182 8481.7793 c
-7858.6182 8481.2939 -7858.1338 8480.1348 -7856.4878 8480.1348 c
-7855.2871 8480.1348 -7854.4434 8480.873 -7854.4434 8481.4844 c
-7854.4434 8482.0967 -7854.7598 8482.4756 -7855.2026 8482.4756 c
-7855.6455 8482.4756 -7855.9824 8482.1377 -7855.9824 8481.7998 c
-7855.9824 8481.126 -7856.1514 8480.9795 -7856.4878 8480.9795 c
-7856.6992 8480.9795 -7856.8896 8481.1045 -7856.8896 8481.4209 c
-7856.8896 8481.6533 -7856.8896 8482.0322 -7855.3711 8483.2979 c
-7854.8857 8483.6982 -7854.4214 8484.3955 -7854.4214 8485.1748 c
-7854.4214 8485.9346 -7855.4561 8487.1348 -7856.6362 8487.1348 c
-7857.8594 8487.1348 -7858.6401 8486.3555 -7859.2515 8485.6387 c
-7859.5454 8485.3018 -7860.9814 8483.6143 -7861.0439 8483.5918 c
-7861.2334 8483.4443 -7861.3174 8483.3193 -7861.3174 8483.1924 c
-7861.3174 8483.0869 -7861.2119 8482.9814 -7861.0854 8482.9814 c
-7860.8535 8482.9814 -7859.9058 8483.9307 -7859.8198 8483.9307 c
-7859.7568 8483.9307 -7859.7153 8483.8662 -7859.7153 8483.7822 c
-7859.7153 8483.0234 -7860.8535 8481.5479 -7862.6255 8481.5479 c
-7864.1006 8481.5479 -7864.9863 8482.665 -7864.9863 8482.708 c
-7864.9863 8482.834 -7864.8394 8482.959 -7864.5225 8483.0234 c
-7860.6426 8483.7617 -7857.3955 8487.3115 -7857.3955 8491.9277 c
-7857.3955 8492.0342 -7857.2256 8492.0605 -7857.0786 8492.0605 c
-7856.7202 8492.0605 -7856.0879 8492.1396 -7856.0879 8491.8662 c
-7856.0879 8491.7598 -7856.1294 8491.6338 -7856.1934 8491.5068 c
-7856.5518 8490.9365 -7856.8682 8490.7627 -7856.8682 8489.8115 c
-7856.8682 8489.3486 -7856.4878 8488.8223 -7855.8984 8488.8223 c
-7854.8657 8488.8223 -7854.4214 8489.8555 -7854.4214 8490.0869 c
-7854.4214 8490.2559 -7854.5073 8490.3193 -7854.5903 8490.3193 c
-7854.7178 8490.3193 -7855.2241 8489.792 -7855.3711 8489.792 c
-7855.5615 8489.792 -7855.7085 8489.834 -7855.7085 8490.3193 c
-7855.7085 8490.6572 -7854.4214 8494.3682 -7854.4214 8495.1689 c
-7854.4214 8495.7393 -7854.7598 8496.4355 -7855.6455 8496.9404 c
-7855.6875 8496.9619 -7855.7085 8496.9824 -7855.7085 8497.0244 c
-7855.7085 8497.1084 -7855.5615 8497.2148 -7855.4126 8497.2559 c
-7854.8018 8497.4258 -7854.4214 8497.5313 -7854.4214 8498.4805 c
-7854.4214 8498.8389 -7854.7598 8499.5137 -7855.0127 8499.5137 c
-7855.2026 8499.5137 -7855.2026 8499.4707 -7855.2026 8499.1123 c
-7855.2026 8498.9648 -7855.2446 8498.8594 -7855.3926 8498.7539 c
-7855.7085 8498.543 -7855.7295 8498.501 -7855.8135 8498.0166 c
-7855.8774 8497.7002 -7856.0039 8497.6143 -7857.1426 8496.9824 c
-7857.5854 8496.709 -7857.6904 8496.4766 -7857.7744 8496.2451 c
-7857.8594 8496.0537 -7857.9233 8496.0537 -7858.4287 8496.0537 c
-7858.9561 8496.0537 -7861.5073 8493.335 -7861.5073 8493.208 c
-7861.5073 8493.1455 -7861.3809 8492.8496 -7861.3809 8492.7861 c
-7861.3809 8492.7236 -7861.4014 8492.6816 -7861.4438 8492.6816 c
-7861.4863 8492.6816 -7861.6338 8492.8916 -7861.6758 8492.8916 c
-7861.7817 8492.8916 -7861.7817 8492.7021 -7861.7817 8492.5537 c
-7861.7817 8492.4502 -7861.5703 8491.8799 -7861.5703 8491.7324 c
-7861.5703 8491.6484 -7861.5918 8491.585 -7861.6338 8491.585 c
-7861.7178 8491.585 -7861.9072 8492.0479 -7861.9922 8492.0479 c
-7862.0342 8492.0479 -7862.0762 8492.0068 -7862.0762 8491.8799 c
-7862.0762 8491.7324 -7861.8862 8491.0156 y
-7861.8862 8490.9521 -7861.9072 8490.8467 -7861.9502 8490.8467 c
-7862.0342 8490.8467 -7862.1826 8491.2471 -7862.2666 8491.2471 c
-7862.3286 8491.2471 -7862.3926 8491.1631 -7862.3926 8491.0156 c
-7862.3926 8490.9307 -7862.2446 8490.5098 -7862.2446 8490.4043 c
-7862.2446 8490.3408 -7862.2666 8490.2764 -7862.3086 8490.2764 c
-7862.3506 8490.2764 -7862.5835 8490.8896 -7862.7095 8490.8896 c
-7862.7935 8490.8896 -7862.8994 8490.7822 -7862.8994 8490.6777 c
-7862.8994 8490.5938 -7862.7729 8490.2354 -7862.7729 8490.1514 c
-7862.7729 8490.1084 -7862.7729 8490.0869 -7862.7935 8490.0869 c
-7862.8774 8490.0869 -7863.0254 8490.5723 -7863.1104 8490.5723 c
-7863.3418 8490.5723 -7863.3623 8490.1514 -7863.3623 8489.9609 c
-7863.3623 8489.877 -7863.2998 8489.54 -7863.2998 8489.4756 c
-7863.2998 8489.4131 -7863.3198 8489.3916 -7863.3418 8489.3916 c
-7863.4897 8489.3916 -7863.6782 8490.1924 -7863.8271 8490.1924 c
-7864.0386 8490.1924 -7864.0386 8490.0029 -7864.0386 8489.7715 c
-7864.0166 8489.2441 L
-7864.0166 8489.2227 -7864.0386 8489.2021 y
-7864.0586 8489.2021 -7864.1006 8489.2227 -7864.1226 8489.2861 c
-7864.1855 8489.4971 -7864.3115 8489.9189 -7864.5225 8489.9189 c
-7864.6694 8489.9189 -7864.8174 8489.75 -7864.8174 8489.6035 c
-7864.8174 8489.3701 -7864.7119 8488.9902 -7864.7119 8488.7588 c
-7864.7119 8488.6953 -7864.7334 8488.6748 -7864.7754 8488.6748 c
-7864.8608 8488.6748 -7864.9863 8489.1162 -7865.0278 8489.2021 c
-7865.0918 8489.2861 -7865.1553 8489.3076 -7865.2192 8489.3076 c
-7865.5352 8489.3076 -7865.5352 8488.9902 -7865.5352 8488.8428 C
-7865.4927 8488.4854 l
f
0 D
-7866.8633 8484.1201 m
-7866.8633 8483.8877 -7868.8042 8483.6982 -7868.8662 8483.6982 c
-7868.9722 8483.6982 -7869.0352 8483.7617 -7869.0352 8483.8662 c
-7869.0352 8484.7314 -7867.2847 8486.9668 -7866.8633 8486.9668 c
-7866.7998 8486.9668 -7866.7783 8486.9463 -7866.7783 8486.8828 c
-7867.2002 8485.6387 -7867.2002 8485.3857 v
-7867.2002 8485.0059 -7867.0942 8484.7529 -7866.9058 8484.3311 c
-7866.8838 8484.2471 -7866.8633 8484.1836 -7866.8633 8484.1201 c
f
-7858.1338 8495.5693 m
-7857.9858 8495.5693 -7857.4795 8495.0645 -7857.3325 8495.0645 c
-7857.2065 8495.0645 -7857.0791 8495.1484 -7857.0791 8495.2959 c
-7857.0791 8495.3799 -7857.2695 8495.8223 -7857.2695 8495.9277 c
-7857.2695 8496.2861 -7856.8896 8496.583 -7856.5098 8496.583 c
-7856.1094 8496.583 -7854.9702 8496.2656 -7854.9702 8495.042 c
-7854.9702 8493.9463 -7855.3926 8493.9463 -7857.0366 8493.9463 c
-7857.3955 8493.9463 -7859.0615 8494.1357 -7859.3145 8494.1357 c
-7859.4399 8494.1357 -7859.4834 8493.9668 -7859.4834 8493.8398 c
-7859.4834 8493.7988 -7859.4834 8493.7568 -7859.4614 8493.7354 c
-7859.3984 8493.3564 -7859.1675 8492.8076 -7859.1675 8492.4277 c
-7859.1675 8487.9795 -7863.2998 8484.1201 -7865.7666 8484.1201 c
-7866.4209 8484.1201 -7866.6519 8484.9219 -7866.6519 8485.3428 c
-7866.6519 8487.0723 -7864.6694 8488.1045 -7864.4175 8488.1045 c
-7864.3545 8488.1045 -7864.3335 8488.085 -7864.3335 8488.042 c
-7864.3335 8488 -7864.3545 8487.958 -7864.3975 8487.916 c
-7864.5225 8487.7471 -7865.0498 8487.1348 -7865.0498 8486.5029 c
-7865.0498 8486.165 -7864.7554 8485.7227 -7863.9951 8485.7227 c
-7862.7305 8485.7227 -7862.1826 8487.0723 -7862.1826 8487.4307 c
-7862.1826 8487.5791 -7862.2446 8487.7891 -7862.4561 8487.7891 c
-7862.6035 8487.7891 -7863.0049 8487.1348 -7863.1519 8487.1348 c
-7863.2158 8487.1348 -7863.4473 8487.2617 -7863.5103 8487.2617 c
-7863.5942 8487.2617 -7863.6582 8487.2412 -7863.7422 8487.2412 c
-7863.8057 8487.2412 -7863.8481 8487.3037 -7863.8481 8487.4092 c
-7863.8481 8487.7686 -7863.3623 8488.3369 -7862.8774 8488.5908 c
-7861.9722 8489.0537 -7860.6226 8490.3828 -7860.6226 8491.8379 c
-7860.6226 8492.2588 -7860.6846 8492.6602 -7860.6846 8492.9971 c
-7860.6846 8493.5459 -7859.7568 8494.4102 -7858.8081 8495.2959 c
-7858.6401 8495.4434 -7858.3862 8495.5693 -7858.1338 8495.5693 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7849.9722 8505.29 m
-7849.9722 8479.2627 L
-7876 8479.2627 L
-7876 8505.29 L
-7849.9722 8505.29 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7858.6455 8492.2793 m
-7849.9736 8492.2793 l
S
-7862.9839 8505.29 m
-7862.9839 8496.6143 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7858.7202 8487.9404 m
-7849.9727 8487.9404 l
S
-7867.3232 8505.29 m
-7867.3232 8495.9355 l
S
0.7084 0.636438 0.515526 0.381872 K
-7858.6504 8505.29 m
-7858.6504 8502.877 l
-7855.9937 8502.6533 -7854.3096 8500.9502 v
-7852.6064 8499.2236 -7852.3774 8496.6182 y
-7849.9727 8496.6182 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7866.7783 8488.9277 m
-7866.7783 8488.7803 -7866.9058 8488.6953 -7867.0103 8488.6953 c
-7867.0527 8488.6953 -7867.2432 8488.9072 -7867.3057 8488.9072 c
-7867.3271 8488.9072 -7867.4326 8488.8857 -7867.4326 8488.7588 c
-7867.4326 8488.6953 -7867.3271 8488.4219 y
-7867.3271 8488.4004 -7869.4155 8485.8916 -7871.5654 8485.3857 c
-7871.7344 8485.3643 -7871.8398 8485.4482 -7871.9238 8485.1318 c
-7872.3042 8483.8662 -7873.1265 8482.4326 -7874.3706 8481.1045 c
-7874.4966 8480.958 -7874.9185 8480.5361 -7875.1089 8480.5361 c
-7875.2134 8480.5361 -7875.2974 8480.5557 -7875.2974 8480.7246 c
-7875.2974 8481.0625 -7874.1167 8482.3906 -7873.9263 8482.7275 c
-7873.0845 8484.1836 -7873.0845 8484.8574 -7873.0845 8485.0898 c
-7873.0845 8485.2158 -7873.2734 8485.3428 -7873.6538 8485.3428 c
-7873.8433 8485.3428 -7874.0752 8485.3213 -7874.2017 8485.3213 c
-7874.3281 8485.3018 -7874.8975 8485.0254 -7875.0449 8485.0254 c
-7875.2134 8485.0254 -7875.3193 8485.1533 -7875.3193 8485.3213 c
-7875.3193 8485.5127 -7875.2559 8485.6387 -7875.0654 8485.7861 c
-7874.3921 8486.3975 -7874.3486 8486.418 -7874.3486 8486.9033 c
-7874.3486 8487.1777 -7875.0449 8488.3799 -7875.0449 8488.6748 c
-7875.0449 8488.9902 -7874.5806 8489.2227 -7874.3066 8489.2227 c
-7873.4424 8489.2227 -7873.21 8487.7471 -7873.21 8487.4307 c
-7873.21 8487.1982 -7873.5054 8486.1035 y
-7873.5054 8485.9121 -7873.4424 8485.9121 -7872.9995 8485.9121 c
-7872.6626 8485.9121 -7872.5986 8488.8428 -7872.5986 8489.0537 c
-7872.5986 8489.2227 -7872.6826 8489.3486 -7872.8511 8489.4561 c
-7873.1265 8489.6455 -7874.4336 8490.9727 -7874.4121 8492.3857 c
-7874.4121 8494.875 -7872.6406 8495.8223 -7871.9458 8495.9072 c
-7871.5874 8495.9502 -7870.7007 8495.9277 -7870.4058 8496.0977 c
-7869.9424 8496.3291 -7868.8042 8497.4893 -7868.8042 8498.4805 c
-7868.8042 8499.6816 -7869.5215 8500.04 -7869.8774 8500.04 c
-7870.2378 8500.04 -7870.5103 8500.0195 -7870.5103 8499.5342 c
-7870.5103 8499.3232 -7870.3423 8499.0908 -7870.1318 8499.0283 c
-7870.0474 8499.0068 -7869.2881 8498.8174 -7869.2881 8498.501 c
-7869.2881 8498.3525 -7869.3721 8498.3525 -7869.5835 8498.3525 c
-7870.1318 8498.3525 -7870.8066 8498.1436 -7872.0928 8496.9404 c
-7872.4722 8496.6035 -7873.1265 8496.5195 -7873.5679 8496.5195 c
-7874.0537 8496.5195 -7875.2974 8496.9824 -7875.2974 8498.4805 c
-7875.2974 8500.3135 -7874.4751 8501.0107 -7873.8433 8501.0107 c
-7873.4209 8501.0107 -7872.8936 8500.6934 -7872.8936 8500.4189 c
-7872.8936 8500.083 -7872.9575 8499.6611 -7873.5479 8499.6182 c
-7874.0537 8499.5762 -7874.3066 8499.3438 -7874.3066 8499.0068 c
-7874.3066 8498.7959 -7874.1592 8498.585 -7873.8218 8498.585 c
-7873.3154 8498.585 -7872.7041 8499.1553 -7872.0713 8499.8926 c
-7871.6714 8500.3779 -7870.7007 8500.9053 -7869.9209 8500.9053 c
-7869.1191 8500.9053 -7868.0654 8499.999 -7868.0654 8498.627 c
-7868.0654 8497.3623 -7869.4995 8496.0537 -7870.2378 8495.5283 c
-7870.9546 8495.001 -7871.3335 8494.6211 -7871.46 8494.4102 c
-7871.5654 8494.2627 -7871.9033 8493.3135 -7872.1143 8493.3135 c
-7872.2607 8493.3135 -7872.3672 8493.4814 -7872.3672 8493.6934 c
-7872.3672 8494.0098 -7872.1143 8494.6436 -7871.7759 8494.9795 c
-7871.6929 8495.085 -7871.6494 8495.1484 -7871.6494 8495.2109 c
-7871.6494 8495.3594 -7871.8398 8495.3799 -7871.9873 8495.3799 c
-7872.5767 8495.3799 -7873.7793 8494.4102 -7873.7793 8492.5762 c
-7873.7793 8490.9941 -7872.7881 8490.1514 -7872.6406 8490.1514 c
-7872.5361 8490.1514 -7872.4297 8490.2559 -7872.3672 8490.4678 c
-7870.6592 8496.624 -7865.7822 8497.8477 -7863.3774 8497.8477 c
-7863.2729 8497.8477 -7863.1895 8497.9102 -7863.1895 8498.0596 c
-7863.1895 8498.1846 -7863.1895 8499.2822 -7863.3359 8499.2822 c
-7863.3774 8499.2822 -7863.4414 8499.2598 -7863.5264 8499.1973 c
-7864.0942 8498.7334 -7864.3755 8498.375 -7865.3022 8498.375 c
-7865.7666 8498.375 -7866.5679 8498.9014 -7866.5679 8499.5137 c
-7866.5679 8500.293 -7865.8936 8501.0107 -7865.4082 8501.0107 c
-7865.0498 8501.0107 -7864.9023 8500.9258 -7864.9023 8500.7998 c
-7864.9023 8500.6719 -7865.3662 8500.2305 -7865.3662 8500.083 c
-7865.3662 8499.8291 -7865.3242 8499.6816 -7864.8809 8499.6816 c
-7864.4814 8499.6816 -7863.7842 8499.8516 -7863.3418 8500.1045 c
-7862.8774 8500.3779 -7861.7393 8501.0107 -7860.7065 8501.0107 c
-7859.9473 8501.0107 -7858.9561 8500.5674 -7858.4702 8499.7666 c
-7858.4287 8499.7021 -7858.3862 8499.6816 -7858.3447 8499.6816 c
-7858.2393 8499.6816 -7858.1543 8499.7666 -7858.1338 8499.915 c
-7858.0913 8500.3135 -7857.7534 8501.0107 -7856.9312 8501.0107 c
-7856.3408 8501.0107 -7855.8135 8500.5039 -7855.8135 8500.0605 c
-7855.8135 8499.8926 -7855.9194 8499.8291 -7856.0239 8499.8291 c
-7856.1094 8499.8291 -7856.4878 8500.083 -7856.5942 8500.083 c
-7856.7407 8500.083 -7857.6479 8499.4707 -7857.7334 8499.3232 c
-7858.5127 8498.0371 -7858.5977 8497.8896 -7859.2295 8497.6357 c
-7859.3984 8497.5518 -7859.3984 8497.4678 -7859.3984 8496.6035 c
-7859.3984 8496.4766 -7859.3984 8496.1807 -7859.5454 8496.0127 c
-7859.8198 8495.7393 -7861.9287 8493.6719 -7862.1392 8493.6719 c
-7862.2241 8493.6719 -7862.4985 8493.9463 -7862.5835 8493.9463 c
-7862.6035 8493.9463 -7862.6255 8493.9463 -7862.6255 8493.9043 C
-7862.6035 8493.7568 l
-7862.6035 8493.5889 -7862.6455 8493.5029 -7862.8564 8493.5029 c
-7862.9199 8493.5029 -7863.1943 8493.6299 -7863.2568 8493.6299 c
-7863.3198 8493.6299 -7863.3623 8493.1875 -7863.4473 8493.1875 c
-7863.4678 8493.1875 -7863.8057 8493.4189 -7863.8896 8493.4189 c
-7864.0166 8493.4189 -7864.1006 8493.335 -7864.1006 8493.2295 c
-7864.1006 8493.167 -7864.1006 8492.6816 -7864.2065 8492.6816 c
-7864.2915 8492.6816 -7864.5225 8492.9756 -7864.5654 8492.9756 c
-7864.5854 8492.9756 -7864.5854 8492.9561 -7864.5854 8492.8916 C
-7864.5439 8492.4707 l
-7864.5439 8492.4063 -7864.5854 8492.3857 -7864.6494 8492.3857 c
-7864.7119 8492.3857 -7864.9658 8492.7021 -7865.0498 8492.7021 c
-7865.0918 8492.7021 -7865.1138 8492.6602 -7865.1138 8492.5762 c
-7865.1138 8492.5342 -7864.9233 8491.8174 -7864.9233 8491.6689 c
-7864.9233 8491.585 -7864.9658 8491.542 -7865.0078 8491.542 c
-7865.0918 8491.542 -7865.4297 8491.9014 -7865.4722 8491.9014 c
-7865.4927 8491.9014 -7865.4927 8491.9014 -7865.4927 8491.8799 c
-7865.4927 8491.7959 -7865.3882 8491.4365 -7865.3882 8491.417 c
-7865.3882 8491.3955 -7865.4082 8491.374 -7865.4297 8491.374 c
-7865.4722 8491.374 -7865.6826 8491.585 -7865.7446 8491.585 c
-7865.7666 8491.585 -7865.7666 8491.585 -7865.7666 8491.542 c
-7865.7666 8491.374 -7865.5137 8490.6357 -7865.5137 8490.5723 c
-7865.5137 8490.5508 -7865.5352 8490.5303 -7865.5562 8490.5303 c
-7865.6826 8490.5303 -7866.1055 8491.1006 -7866.1465 8491.1006 c
-7866.1675 8491.1006 -7866.1675 8491.0791 -7866.1675 8491.0156 c
-7866.1675 8490.8252 -7865.8936 8489.9189 y
-7865.8936 8489.8975 -7865.9146 8489.877 -7865.9351 8489.877 c
-7866.0615 8489.877 -7866.4414 8490.4238 -7866.5049 8490.4238 c
-7866.5264 8490.4238 -7866.5264 8490.4238 -7866.5264 8490.3828 c
-7866.2729 8489.4756 -7866.2729 8489.3916 v
-7866.2729 8489.2861 -7866.3154 8489.2441 -7866.3994 8489.2441 c
-7866.4634 8489.2441 -7866.6943 8489.5811 -7866.7783 8489.5811 c
-7866.8218 8489.5811 -7866.8418 8489.54 -7866.8418 8489.4756 c
-7866.7783 8488.9277 L
f
1 D
-7871.0386 8488.1904 m
-7871.1016 8488.2314 -7871.1865 8488.2529 -7871.2495 8488.2529 c
-7871.5874 8488.2529 -7871.6714 8486.25 -7871.6714 8486.0596 c
-7871.6714 8485.9971 -7871.6289 8485.9561 -7871.5654 8485.9561 c
-7870.4272 8485.9561 -7868.5498 8487.917 -7868.5498 8488.3369 c
-7868.5498 8488.3799 -7868.5498 8488.4004 -7868.5928 8488.4004 c
-7868.6138 8488.4004 -7868.6553 8488.3799 -7868.6982 8488.3584 c
-7869.0986 8488.085 -7869.5215 8487.9795 -7870.1104 8487.9795 c
-7870.4902 8487.9795 -7870.7007 8488.042 -7871.0386 8488.1904 c
f
-7869.3306 8492.1533 m
-7868.8882 8492.9756 -7867.8115 8492.9756 -7867.7271 8492.9756 c
-7867.5801 8492.9756 -7867.3906 8492.9561 -7867.3906 8492.7861 c
-7867.3906 8492.5967 -7868.4238 8492.3438 -7868.4238 8492.1533 c
-7868.2129 8491.8174 -7868.2129 8491.7324 v
-7868.2129 8491.333 -7868.2129 8491.29 -7868.0225 8491.29 c
-7867.7915 8491.29 -7866.9897 8491.585 -7866.7378 8492.3018 c
-7866.5474 8492.8291 -7865.5767 8494.5566 -7863.4258 8494.5566 c
-7862.5615 8494.5566 -7862.2446 8494.4102 -7862.0977 8494.4102 c
-7861.7817 8494.4102 -7859.8418 8496.4561 -7859.8198 8496.624 c
-7859.7998 8496.7295 -7859.7998 8496.8564 -7859.7998 8496.9619 c
-7859.7998 8497.1729 -7859.7998 8497.5732 -7860.1782 8497.8262 c
-7860.3896 8497.9531 -7860.4951 8498.2061 -7860.4951 8498.458 c
-7860.4951 8498.5645 -7860.4951 8498.9229 -7860.2207 8498.9229 c
-7859.9473 8498.9229 -7859.9058 8498.7754 -7859.9058 8498.4805 c
-7859.9058 8498.292 -7859.7358 8498.1846 -7859.5889 8498.1846 c
-7859.4399 8498.1846 -7858.8506 8498.4805 -7858.8506 8498.9014 c
-7858.8506 8499.1338 -7859.1455 8500.209 -7860.4321 8500.209 c
-7861.4014 8500.209 -7861.4014 8500.083 -7861.4014 8498.6895 c
-7861.4014 8497.4258 -7861.3594 8497.0244 -7861.2119 8495.8867 c
-7861.1904 8495.8867 -7861.1904 8495.8652 y
-7861.1904 8495.7178 -7861.3174 8495.6543 -7861.4233 8495.6543 c
-7861.4438 8495.6543 -7861.4648 8495.6748 -7861.4863 8495.6748 c
-7861.6118 8495.6963 -7861.9072 8496.0127 -7862.8145 8495.9902 c
-7864.7119 8495.9902 -7868.9087 8494.4316 -7870.2793 8491.9434 c
-7870.8906 8490.8682 -7871.2705 8489.4971 -7871.2705 8489.2441 c
-7871.2705 8488.6953 -7870.2578 8488.5273 -7870.0049 8488.5273 c
-7868.6553 8488.5273 -7867.2847 8490.1924 -7867.2847 8490.6357 c
-7867.2847 8490.6777 -7867.3271 8490.7197 -7867.3486 8490.7197 c
-7867.3906 8490.7197 -7867.4326 8490.6992 -7867.4961 8490.6572 c
-7867.6431 8490.5098 -7868.2334 8489.8555 -7868.8662 8489.8555 c
-7869.5625 8489.8555 -7869.5835 8490.3193 -7869.5835 8490.7412 c
-7869.5835 8491.1846 -7869.5415 8491.7529 -7869.3306 8492.1533 c
f
0 D
-7865.5352 8488.8428 m
-7865.5352 8488.9902 -7865.5352 8489.3076 -7865.2192 8489.3076 c
-7865.1553 8489.3076 -7865.0918 8489.2861 -7865.0278 8489.2021 c
-7864.9863 8489.1162 -7864.8608 8488.6748 -7864.7754 8488.6748 c
-7864.7334 8488.6748 -7864.7119 8488.6953 -7864.7119 8488.7588 c
-7864.7119 8488.9902 -7864.8174 8489.3701 -7864.8174 8489.6035 c
-7864.8174 8489.75 -7864.6694 8489.9189 -7864.5225 8489.9189 c
-7864.3115 8489.9189 -7864.1855 8489.4971 -7864.1226 8489.2861 c
-7864.1006 8489.2227 -7864.0586 8489.2021 -7864.0386 8489.2021 c
-7864.0166 8489.2227 -7864.0166 8489.2441 V
-7864.0386 8489.7715 l
-7864.0386 8490.0029 -7864.0386 8490.1924 -7863.8271 8490.1924 c
-7863.6782 8490.1924 -7863.4897 8489.3916 -7863.3418 8489.3916 c
-7863.3198 8489.3916 -7863.2998 8489.4131 -7863.2998 8489.4756 c
-7863.2998 8489.54 -7863.3623 8489.877 -7863.3623 8489.9609 c
-7863.3623 8490.1514 -7863.3418 8490.5723 -7863.1104 8490.5723 c
-7863.0254 8490.5723 -7862.8774 8490.0869 -7862.7935 8490.0869 c
-7862.7729 8490.0869 -7862.7729 8490.1084 -7862.7729 8490.1514 c
-7862.7729 8490.2354 -7862.8994 8490.5938 -7862.8994 8490.6777 c
-7862.8994 8490.7822 -7862.7935 8490.8896 -7862.7095 8490.8896 c
-7862.5835 8490.8896 -7862.3506 8490.2764 -7862.3086 8490.2764 c
-7862.2666 8490.2764 -7862.2446 8490.3408 -7862.2446 8490.4043 c
-7862.2446 8490.5098 -7862.3926 8490.9307 -7862.3926 8491.0156 c
-7862.3926 8491.1631 -7862.3286 8491.2471 -7862.2666 8491.2471 c
-7862.1826 8491.2471 -7862.0342 8490.8467 -7861.9502 8490.8467 c
-7861.9072 8490.8467 -7861.8862 8490.9521 -7861.8862 8491.0156 c
-7862.0762 8491.7324 -7862.0762 8491.8799 v
-7862.0762 8492.0068 -7862.0342 8492.0479 -7861.9922 8492.0479 c
-7861.9072 8492.0479 -7861.7178 8491.585 -7861.6338 8491.585 c
-7861.5918 8491.585 -7861.5703 8491.6484 -7861.5703 8491.7324 c
-7861.5703 8491.8799 -7861.7817 8492.4502 -7861.7817 8492.5537 c
-7861.7817 8492.7021 -7861.7817 8492.8916 -7861.6758 8492.8916 c
-7861.6338 8492.8916 -7861.4863 8492.6816 -7861.4438 8492.6816 c
-7861.4014 8492.6816 -7861.3809 8492.7236 -7861.3809 8492.7861 c
-7861.3809 8492.8496 -7861.5073 8493.1455 -7861.5073 8493.208 c
-7861.5073 8493.335 -7858.9561 8496.0537 -7858.4287 8496.0537 c
-7857.9233 8496.0537 -7857.8594 8496.0537 -7857.7744 8496.2451 c
-7857.6904 8496.4766 -7857.5854 8496.709 -7857.1426 8496.9824 c
-7856.0039 8497.6143 -7855.8774 8497.7002 -7855.8135 8498.0166 c
-7855.7295 8498.501 -7855.7085 8498.543 -7855.3926 8498.7539 c
-7855.2446 8498.8594 -7855.2026 8498.9648 -7855.2026 8499.1123 c
-7855.2026 8499.4707 -7855.2026 8499.5137 -7855.0127 8499.5137 c
-7854.7598 8499.5137 -7854.4214 8498.8389 -7854.4214 8498.4805 c
-7854.4214 8497.5313 -7854.8018 8497.4258 -7855.4126 8497.2559 c
-7855.5615 8497.2148 -7855.7085 8497.1084 -7855.7085 8497.0244 c
-7855.7085 8496.9824 -7855.6875 8496.9619 -7855.6455 8496.9404 c
-7854.7598 8496.4355 -7854.4214 8495.7393 -7854.4214 8495.1689 c
-7854.4214 8494.3682 -7855.7085 8490.6572 -7855.7085 8490.3193 c
-7855.7085 8489.834 -7855.5615 8489.792 -7855.3711 8489.792 c
-7855.2241 8489.792 -7854.7178 8490.3193 -7854.5903 8490.3193 c
-7854.5073 8490.3193 -7854.4214 8490.2559 -7854.4214 8490.0869 c
-7854.4214 8489.8555 -7854.8657 8488.8223 -7855.8984 8488.8223 c
-7856.4878 8488.8223 -7856.8682 8489.3486 -7856.8682 8489.8115 c
-7856.8682 8490.7627 -7856.5518 8490.9365 -7856.1934 8491.5068 c
-7856.1294 8491.6338 -7856.0879 8491.7598 -7856.0879 8491.8662 c
-7856.0879 8492.1396 -7856.7202 8492.0605 -7857.0786 8492.0605 c
-7857.2256 8492.0605 -7857.3955 8492.0342 -7857.3955 8491.9277 c
-7857.3955 8487.3115 -7860.6426 8483.7617 -7864.5225 8483.0234 c
-7864.8394 8482.959 -7864.9863 8482.834 -7864.9863 8482.708 c
-7864.9863 8482.665 -7864.1006 8481.5479 -7862.6255 8481.5479 c
-7860.8535 8481.5479 -7859.7153 8483.0234 -7859.7153 8483.7822 c
-7859.7153 8483.8662 -7859.7568 8483.9307 -7859.8198 8483.9307 c
-7859.9058 8483.9307 -7860.8535 8482.9814 -7861.0854 8482.9814 c
-7861.2119 8482.9814 -7861.3174 8483.0869 -7861.3174 8483.1924 c
-7861.3174 8483.3193 -7861.2334 8483.4443 -7861.0439 8483.5918 c
-7860.9814 8483.6143 -7859.5454 8485.3018 -7859.2515 8485.6387 c
-7858.6401 8486.3555 -7857.8594 8487.1348 -7856.6362 8487.1348 c
-7855.4561 8487.1348 -7854.4214 8485.9346 -7854.4214 8485.1748 c
-7854.4214 8484.3955 -7854.8857 8483.6982 -7855.3711 8483.2979 c
-7856.8896 8482.0322 -7856.8896 8481.6533 -7856.8896 8481.4209 c
-7856.8896 8481.1045 -7856.6992 8480.9795 -7856.4878 8480.9795 c
-7856.1514 8480.9795 -7855.9824 8481.126 -7855.9824 8481.7998 c
-7855.9824 8482.1377 -7855.6455 8482.4756 -7855.2026 8482.4756 c
-7854.7598 8482.4756 -7854.4434 8482.0967 -7854.4434 8481.4844 c
-7854.4434 8480.874 -7855.2871 8480.1348 -7856.4878 8480.1348 c
-7858.1338 8480.1348 -7858.6182 8481.2939 -7858.6182 8481.7793 c
-7858.6182 8482.1162 -7858.5127 8482.708 -7858.1958 8483.0654 c
-7857.8594 8483.4668 -7857.4595 8484.1631 -7857.1846 8484.8799 c
-7856.9521 8485.5332 -7856.4258 8485.8916 -7856.0879 8485.8916 c
-7856.0239 8485.8916 -7856.0039 8485.8701 -7856.0039 8485.8281 c
-7856.0039 8485.7227 -7856.2144 8485.3428 -7856.2144 8485.2588 c
-7856.2144 8484.8799 -7856.1094 8484.6689 -7855.8984 8484.6689 c
-7855.3711 8484.6689 -7855.2656 8485.3213 -7855.2656 8485.5537 c
-7855.2656 8486.04 -7855.6245 8486.6289 -7856.6782 8486.6289 c
-7858.0063 8486.6289 -7859.1245 8484.8799 -7859.1245 8484.8164 c
-7859.1245 8484.7939 -7859.0825 8484.2471 -7859.0825 8484.1406 c
-7859.0825 8482.2422 -7860.79 8480.9795 -7862.6255 8480.9795 c
-7864.1855 8480.9795 -7865.3447 8482.2021 -7865.5352 8482.4961 c
-7865.6401 8482.665 -7865.7666 8482.749 -7865.9146 8482.749 c
-7866.2729 8482.749 -7869.1191 8482.6875 -7869.1191 8482.2646 c
-7869.1191 8482.2227 -7868.9937 8481.7588 -7868.8242 8481.7588 c
-7868.7607 8481.7588 -7868.6982 8481.7998 -7868.6353 8481.8643 c
-7868.4438 8482.0967 -7868.0225 8482.2227 -7867.6431 8482.2227 c
-7867.0942 8482.2227 -7866.1895 8481.6318 -7866.1895 8480.8945 c
-7866.1895 8480.5986 -7866.5679 8480.1143 -7866.8838 8480.1143 c
-7867.1377 8480.1143 -7868.1914 8480.8311 -7868.4238 8480.8311 c
-7868.7402 8480.8311 -7868.8662 8480.6826 -7869.1606 8480.3457 c
-7869.3306 8480.1563 -7869.4575 8480.1348 -7869.6465 8480.1348 c
-7869.8154 8480.1348 -7869.9634 8480.2402 -7869.9634 8480.3877 c
-7869.9634 8480.5557 -7869.6465 8480.874 -7869.6265 8481.1475 c
-7869.6265 8481.2939 -7869.6055 8481.5254 -7869.6055 8481.7158 c
-7869.6055 8481.9697 -7869.6265 8482.3281 -7869.8994 8482.3281 c
-7870.7217 8482.3281 -7872.7681 8481.042 -7873.6538 8480.4502 c
-7874.1592 8480.1143 -7874.2432 8480.1143 -7874.3066 8480.1143 c
-7874.4336 8480.1143 -7874.5176 8480.1982 -7874.5176 8480.3457 c
-7874.5176 8480.4717 -7872.0713 8482.624 -7869.8994 8483.3604 c
-7869.5835 8483.4668 -7869.6055 8483.6143 -7869.5625 8483.7822 c
-7869.1406 8485.5332 -7867.5166 8487.7061 -7866.9263 8487.7061 c
-7866.7783 8487.7061 -7866.7158 8487.7061 -7866.7158 8487.8115 c
-7866.7158 8488.0205 -7866.6104 8488.2529 -7866.4634 8488.2529 c
-7866.4209 8488.2529 -7866.2524 8488.0205 -7866.21 8488.0205 c
-7866.1255 8488.0205 -7866.0615 8488.4854 -7866.0415 8488.5684 c
-7865.9995 8488.6748 -7865.9146 8488.7588 -7865.8506 8488.7588 c
-7865.7666 8488.7588 -7865.5986 8488.4219 -7865.5352 8488.4219 c
-7865.5137 8488.4219 -7865.4927 8488.4414 -7865.4927 8488.4854 c
-7865.5352 8488.8428 L
f
1 D
-7866.9058 8484.3311 m
-7867.0942 8484.7529 -7867.2002 8485.0059 -7867.2002 8485.3857 c
-7867.2002 8485.6387 -7866.7783 8486.8828 y
-7866.7783 8486.9463 -7866.7998 8486.9668 -7866.8633 8486.9668 c
-7867.2847 8486.9668 -7869.0352 8484.7314 -7869.0352 8483.8662 c
-7869.0352 8483.7617 -7868.9722 8483.6982 -7868.8662 8483.6982 c
-7868.8042 8483.6982 -7866.8633 8483.8877 -7866.8633 8484.1201 c
-7866.8633 8484.1836 -7866.8838 8484.2471 -7866.9058 8484.3311 c
f
-7858.8081 8495.2959 m
-7859.7568 8494.4102 -7860.6846 8493.5459 -7860.6846 8492.9971 c
-7860.6846 8492.6602 -7860.6226 8492.2588 -7860.6226 8491.8379 c
-7860.6226 8490.3828 -7861.9722 8489.0537 -7862.8774 8488.5908 c
-7863.3623 8488.3369 -7863.8481 8487.7686 -7863.8481 8487.4092 c
-7863.8481 8487.3037 -7863.8057 8487.2412 -7863.7422 8487.2412 c
-7863.6582 8487.2412 -7863.5942 8487.2617 -7863.5103 8487.2617 c
-7863.4473 8487.2617 -7863.2158 8487.1348 -7863.1519 8487.1348 c
-7863.0049 8487.1348 -7862.6035 8487.79 -7862.4561 8487.79 c
-7862.2446 8487.79 -7862.1826 8487.5791 -7862.1826 8487.4307 c
-7862.1826 8487.0723 -7862.7305 8485.7227 -7863.9951 8485.7227 c
-7864.7554 8485.7227 -7865.0498 8486.165 -7865.0498 8486.5029 c
-7865.0498 8487.1348 -7864.5225 8487.7471 -7864.3975 8487.917 c
-7864.3545 8487.958 -7864.3335 8488 -7864.3335 8488.042 c
-7864.3335 8488.085 -7864.3545 8488.1045 -7864.4175 8488.1045 c
-7864.6694 8488.1045 -7866.6519 8487.0723 -7866.6519 8485.3428 c
-7866.6519 8484.9219 -7866.4209 8484.1201 -7865.7666 8484.1201 c
-7863.2998 8484.1201 -7859.1675 8487.9795 -7859.1675 8492.4277 c
-7859.1675 8492.8076 -7859.3984 8493.3564 -7859.4614 8493.7354 c
-7859.4834 8493.7568 -7859.4834 8493.7988 -7859.4834 8493.8398 c
-7859.4834 8493.9668 -7859.4399 8494.1357 -7859.3145 8494.1357 c
-7859.0615 8494.1357 -7857.3955 8493.9463 -7857.0366 8493.9463 c
-7855.3926 8493.9463 -7854.9702 8493.9463 -7854.9702 8495.042 c
-7854.9702 8496.2656 -7856.1094 8496.583 -7856.5098 8496.583 c
-7856.8896 8496.583 -7857.2695 8496.2861 -7857.2695 8495.9277 c
-7857.2695 8495.8223 -7857.0791 8495.3799 -7857.0791 8495.2959 c
-7857.0791 8495.1484 -7857.2065 8495.0645 -7857.3325 8495.0645 c
-7857.4795 8495.0645 -7857.9858 8495.5693 -7858.1338 8495.5693 c
-7858.3862 8495.5693 -7858.6401 8495.4434 -7858.8081 8495.2959 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)0 A
u
1 Ap
0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7858 8505.29 m
-7876 8505.29 L
-7876 8487.29 L
-7858 8487.29 L
-7858 8505.29 L
n
u
0 Ap
0 O
0 0 0 1 k
-7858 8496.29 m
-7865.8379 8491.7646 L
-7865.8379 8494.8525 L
-7876 8494.8525 L
-7876 8497.7275 L
-7865.8379 8497.7275 L
-7865.8379 8500.8164 L
-7858 8496.29 L
f
0.15 1 0.9 0.1 k
-7862.2939 8494.6758 m
-7865.0879 8493.0645 L
-7865.0879 8495.5908 L
-7876 8495.5908 L
-7876 8496.9902 L
-7865.0879 8496.9902 L
-7865.0879 8499.5166 L
-7862.2939 8497.9033 L
-7859.5 8496.29 L
-7862.2939 8494.6758 L
f
0 1 1 0 k
-7864.1675 8495.3818 m
-7864.5586 8495.3818 -7864.8896 8495.6309 -7865.0176 8495.9766 C
-7876 8495.9766 L
-7876 8496.6025 L
-7865.0176 8496.6025 L
-7864.8896 8496.9502 -7864.5586 8497.1982 -7864.1675 8497.1982 c
-7863.6655 8497.1982 -7863.2588 8496.792 -7863.2588 8496.29 c
-7863.2588 8495.7891 -7863.6655 8495.3818 -7864.1675 8495.3818 c
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -
( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -
(/ Adobe PatternOnPath Brush Tool/ Gothic/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Spoke)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Gothic)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Red Arrow Brush)
(1 / Unnamed Brush Pat 3/ Unnamed Brush Pat 5/ Unnamed Brush Pa) -
(t 5/ Unnamed Brush Pat 7/ Unnamed Brush Pat 2/ 5 0.00392157 0.) -
(00392157 0.00784314 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 0 0 0.8 k
0 J 0 j 1 w 4 M []0 d1 XR
129.4565 291.8408 m
129.4565 294.0947 129.186 293.3701 130.5146 294.8486 c
132.1831 296.7041 L
463.2598 296.7041 L
464.9951 293.5439 L
464.9922 57.9365 L
487.0166 52.2705 L
485.4365 40.5068 L
463.875 27.0908 L
131.8872 27.0908 L
113.0889 40.5186 L
110.4736 52.1787 L
111.6797 52.5576 L
129.4565 57.5068 L
129.4565 291.8408 L
129.4565 291.8408 L
f
1 D
151.6367 63.2588 m
442.8086 63.2588 L
442.8086 273.4795 L
151.6367 273.4795 L
151.6367 63.2588 L
f
*U
*u
0 0 0 1 k
463.4961 28.415 m
484.209 41.3018 L
485.5498 51.2822 L
444.123 61.9365 L
150.3198 61.9365 L
112.0342 51.2842 L
112.0298 51.2842 L
112.0298 51.2842 L
112.0298 51.2822 L
114.2686 41.3018 L
132.311 28.415 L
463.4961 28.415 L
463.4961 28.415 L
f
0 D
130.7842 293.1592 m
463.6729 293.2021 L
463.6699 56.9131 L
444.1318 61.9346 L
444.1318 274.7998 L
150.3145 274.7998 L
150.3145 61.9385 L
130.7788 56.501 L
130.7842 293.1592 L
130.7842 293.1592 L
f
460.6699 291.4033 m
460.6699 291.4033 L
460.6699 291.4033 L
f
1 D
130.7788 293.1631 m
462.4775 295.3818 L
132.7729 295.3818 L
130.7788 293.1631 L
f
*U
0 D
463.4961 28.415 m
484.209 41.3018 L
114.2686 41.3018 L
132.311 28.415 L
463.4961 28.415 L
Bb
1 (GradientFill 1) 299.2388 62.3418 -90 27.4646 1 0 0 1 0 0 Bg
-0.000001 -27.4646 -373.9404 0.000016 486.209 62.3418 Xm
-0.000357 -8157.1992 -373.9404 0.000016 486.209 8219.541 Bc
-0.000001 -27.4646 -373.9404 0.000016 486.209 62.3418 Bm
-0.000357 -8157.1992 -373.9404 0.000016 486.209 34.877 Bc
f
0 BB
0 0 0 0.5 k
130.7788 56.501 m
130.7788 293.1631 L
133.7759 291.4033 L
133.7759 57.335 L
130.7788 56.501 L
f
463.6699 56.9131 m
463.6729 293.2021 L
460.6709 291.4033 L
460.6709 57.6826 L
463.6699 56.9131 L
f
0 0 0 0.05 k
0 XR
150.3198 61.9365 m
112.0288 51.2842 L
485.5498 51.2842 L
444.123 61.9365 L
150.3198 61.9365 L
f
0 0 0 0.15 k
485.5498 51.2822 m
112.0298 51.2842 L
114.269 41.3018 L
484.209 41.3018 L
485.5498 51.2822 L
f
1 XR
133.7759 57.335 m
133.7759 291.4033 L
150.3145 274.7998 L
150.3145 61.9385 L
133.7759 57.335 L
Bb
1 (GradientFill 2) 142.0454 245.5713 -90 118.6148 1 0 0 1 0 0 Bg
-0.000005 -118.6148 -20.5386 0.000001 152.3145 245.5713 Xm
-0.000353 -8066.8779 -20.5386 0.000001 152.3149 8312.4492 Bc
-0.000005 -118.6148 -20.5386 0.000001 152.3145 245.5713 Bm
-0.000353 -8066.8779 -20.5386 0.000001 152.3145 126.9561 Bc
f
0 BB
460.6709 57.6826 m
460.6699 291.4053 L
444.1318 274.7998 L
444.1318 61.9346 L
460.6709 57.6826 L
Bb
1 (GradientFill 2) 452.4014 245.6123 -90 118.4214 1 0 0 1 0 0 Bg
-0.000005 -118.4214 -20.5391 0.000001 462.6709 245.6123 Xm
-0.000366 -8377.1943 -20.5391 0.000001 462.6709 8622.8066 Bc
-0.000005 -118.4214 -20.5391 0.000001 462.6709 245.6123 Bm
-0.000366 -8377.1943 -20.5391 0.000001 462.6709 127.1904 Bc
f
0 BB
0 0 0 0.5 k
130.7788 293.1631 m
463.6729 293.2041 L
462.4775 295.3818 L
132.7729 295.3818 L
130.7788 293.1631 L
f
0 0 0 0.15 k
0 XR
133.7759 291.4033 m
150.3145 274.7998 L
444.1318 274.7998 L
460.6709 291.4033 L
133.7759 291.4033 L
f
0 0 0 0.3 k
1 XR
130.7832 293.1592 m
463.6729 293.2021 L
460.6709 291.4033 L
133.7759 291.4033 L
130.7832 293.1592 L
f
U
u
u
0 0 0 0.7 k
509.3184 177.2354 m
509.3975 177.2979 509.4883 177.3467 509.5879 177.376 C
511.1074 177.8193 513.3008 173.3369 513.7637 172.417 C
515.6631 168.6357 517.2266 164.4971 518.5781 160.5127 C
519.2002 158.6807 524.4785 142.7764 521.6621 141.8604 C
521.374 141.6494 520.8691 141.3994 520.5332 141.2979 C
520.5049 141.29 L
520.4756 141.29 L
517.3887 141.415 512.3057 155.7119 511.4814 158.1182 C
510.1387 162.042 508.8838 166.21 508.1318 170.2725 C
507.916 171.4346 507.0361 176.0732 508.457 176.8096 C
508.4727 176.8174 L
508.4893 176.8232 L
508.6924 176.8799 509.043 177.1279 509.3184 177.2354 C
f
0 0 0 0.6 k
508.5381 176.6729 m
508.6924 176.7158 509.0811 176.9893 509.4375 177.1104 C
506.915 174.8311 519.1035 141.2783 521.584 142.0049 C
521.2354 141.7354 520.6445 141.4971 520.4824 141.4482 C
516.2207 141.6182 504.916 174.7959 508.5381 176.6729 C
f
0 0 0 0.2 k
509.6367 177.2256 m
513.3965 178.3252 525.3379 143.1025 521.5869 142.0049 c
517.8281 140.9014 505.8887 176.126 509.6367 177.2256 C
f
511.3203 172.3779 m
514.4619 173.2998 524.46 143.8213 521.3193 142.9014 c
518.1768 141.9814 508.1797 171.458 511.3203 172.3779 C
Bb
1 (GradientFill 3) 515.4512 164.7109 -83 17.4163 1 0 0 1 0 0 Bg
2.12251 -17.2864 -16.6657 -2.04629 523.7842 165.7344 Xm
1024.0797 -8340.4619 -16.6657 -2.04629 -500.2954 8506.1963 Bc
2.12251 -17.2864 -16.6657 -2.04629 523.7842 165.7344 Bm
1024.0797 -8340.4619 -16.6657 -2.04629 525.9063 148.4482 Bc
f
0 BB
U
u
0 0 0 0.15 k
488.6729 47.4502 m
442.4844 70.2744 L
433.3271 70.3584 L
488.6729 41.7549 L
488.6729 47.4502 L
f
433.7773 268.7021 m
442.4619 268.3408 L
488.6729 288.5186 L
488.6729 292.9092 L
433.7773 268.7021 L
Bb
1 (GradientFill 4) 461.2246 350.5771 90 31.3279 1 0 0 1 0 0 Bg
-0.000001 31.3279 58.8955 0.000003 431.7773 350.5771 Xm
-0.000368 8422.4609 58.8955 0.000003 431.7773 -8071.8838 Bc
0 5.01247 58.8955 0.000003 431.7773 350.5771 Bm
-0.000001 21.303 58.8955 0.000003 431.7773 355.5898 Bm
0 5.01247 58.8955 0.000003 431.7773 376.8926 Bm
-0.000368 8422.4609 58.8955 0.000003 431.7773 381.9053 Bc
f
0 BB
0 0 0 0.2 k
433.3271 70.3584 m
442.4844 70.2744 L
442.4619 268.3408 L
433.7773 268.7021 L
433.3271 70.3584 L
f
0.05 0 0 0.36 k
436.5801 70.4639 m
438.9951 70.5049 L
439.6543 268.1885 L
437.4307 268.3857 L
436.5801 70.4639 L
f
0 0 0 0.2 k
497.9365 21.6963 m
511.2002 23.1104 L
511.3066 306.0967 L
498.5625 308.5811 L
497.9365 21.6963 L
f
503.123 22.5889 m
506.3184 22.9482 L
506.6436 306.6162 L
503.6514 307.2373 L
503.123 22.5889 L
Bb
1 (GradientFill 1) 501.6367 164.9131 0 5.33028 1 0 0 1 0 0 Bg
5.33028 0 0 -288.6484 501.6367 309.2373 Xm
8379.1504 0 0 -288.6484 -7877.5137 309.2373 Bc
5.33028 0 0 -288.6484 501.6367 309.2373 Bm
8379.1504 0 0 -288.6484 506.9668 309.2373 Bc
f
0 BB
*u
1 D
0 g
498.5625 308.5811 m
428.79 274.1338 L
428.5771 62.8369 L
497.9365 21.6963 L
498.5625 308.5811 L
498.5625 308.5811 L
f
0 D
488.6729 292.9092 m
488.6729 41.7549 L
433.3271 70.3584 L
433.7773 268.7021 L
488.6729 292.9092 L
Bb
1 (GradientFill 2) 463.5703 269.2363 -90 207.9516 1 0 0 1 0 0 Bg
-0.000009 -207.9516 -73.9853 0.000003 500.5625 269.2363 Xm
-0.000366 -8381.915 -73.9853 0.000003 500.5625 8651.1514 Bc
-0.000009 -207.9516 -73.9853 0.000003 500.5625 269.2363 Bm
-0.000366 -8381.915 -73.9853 0.000003 500.5625 61.2852 Bc
f
0 BB
*U
0 0 0 0 k
496.8398 23.4658 m
497.2842 306.8975 L
434.8457 276.249 L
434.8457 276.3174 L
494.4268 302.0283 L
494.3281 27.5928 L
434.6367 60.04 L
496.8398 23.4658 L
f
*u
1 D
0 0 0 0.7 k
0 XR
428.4482 274.4463 m
428.3662 62.6611 L
497.8838 21.2588 L
511.6143 22.6514 L
511.5967 306.3525 L
498.543 308.915 L
428.4482 274.4463 L
428.4482 274.4463 L
f
0 D
429.1982 273.8037 m
497.8438 307.7646 L
498.3252 199.6787 L
499.377 307.9287 L
511 305.7881 L
510.8584 23.46 L
498.3037 22.2236 L
498.0938 93.8447 L
497.4307 22.3135 L
428.835 62.8525 L
429.1982 273.8037 L
429.1982 273.8037 L
f
488.0742 48.04 m
442.8906 70.4756 L
442.8721 268.0127 L
488.3281 287.9287 L
488.0742 48.04 L
488.0742 48.04 L
f
442.3721 69.8623 m
433.3271 70.3584 L
442.1416 70.5557 L
442.123 267.9697 L
433.7773 268.7021 L
442.376 268.6553 L
488.4004 288.7666 L
488.6729 292.9111 L
489.083 288.4658 L
488.6729 41.7549 L
487.9658 47.3271 L
442.3721 69.8623 L
f
*U
U
u
1 XR
442.8721 268.0127 m
488.3281 287.9287 L
488.0742 48.04 L
442.8906 70.4756 L
442.8721 268.0127 L
Bb
1 (GradientFill 5) 391.3262 48.0986 56 274.932 1 0 0 1 0 0 Bg
153.74 227.9289 136.3613 -91.9769 323.1455 94.0869 Xm
4598.21 6817.1265 136.3613 -91.9769 -4275.0645 -6723.0391 Bc
153.74 227.9289 136.3613 -91.9769 323.1455 94.0869 Bm
4598.21 6817.1265 136.3613 -91.9769 476.8857 322.0156 Bc
f
0 BB
u
*u
0.1 0 0 0.72 k
464.9951 277.7061 m
464.9922 59.501 L
442.8906 70.4756 L
442.8721 268.0127 L
464.9951 277.7061 L
464.9951 277.7061 L
f
471.5313 56.2549 m
487.0166 52.2705 L
486.5508 48.7979 L
471.5313 56.2549 L
f
*U
*u
1 D
0.1 0 0 0.9 k
485.2998 49.4189 m
485.5498 51.2822 L
477.2402 53.4189 L
485.2998 49.4189 L
485.2998 49.4189 L
f
0 D
444.1318 268.5635 m
463.6729 277.126 L
463.6699 60.1572 L
444.1318 69.8604 L
444.1318 268.5635 L
f
*U
0.1 0 0 0.45 k
463.6699 60.1572 m
463.6729 277.126 L
460.6709 275.8115 L
460.6709 61.6475 L
463.6699 60.1572 L
f
0.1 0 0 0.05 k
0 XR
481.541 51.2842 m
485.5498 51.2842 L
477.2354 53.4229 L
481.541 51.2842 L
f
0.1 0 0 0.14 k
485.5498 51.2822 m
481.5439 51.2822 L
485.2998 49.4189 L
485.5498 51.2822 L
f
1 XR
460.6709 61.6475 m
460.6699 275.8115 L
444.1318 268.5635 L
444.1318 69.8604 L
460.6709 61.6475 L
Bb
1 (GradientFill 6) 452.4014 217.1523 -90 99.9383 1 0 0 1 0 0 Bg
-0.000004 -99.9383 -20.5391 0.000001 462.6709 217.1523 Xm
-0.000367 -8390.0605 -20.5391 0.000001 462.6709 8607.2129 Bc
-0.000004 -99.9383 -20.5391 0.000001 462.6709 217.1523 Bm
-0.000367 -8390.0605 -20.5391 0.000001 462.6709 117.2139 Bc
f
0 BB
U
*u
0.22 0 0 0.22 k
458.3076 184.1162 m
478.499 137.292 L
478.3691 136.5967 L
458.5215 182.6221 L
458.3076 184.1162 L
458.3076 184.1162 L
f
450.1963 86.2783 m
450.4775 87.2529 L
481.1855 116.165 L
481.3535 115.6143 L
450.1963 86.2783 L
450.1963 86.2783 L
f
1 D
452.7539 97.6045 m
471.8584 115.5947 L
471.7344 116.0029 L
452.9619 98.3271 L
452.7539 97.6045 L
452.7539 97.6045 L
f
461.6182 91.667 m
480.7256 109.6553 L
480.5977 110.0654 L
461.8262 92.3896 L
461.6182 91.667 L
461.6182 91.667 L
f
460.6533 89.4678 m
479.7617 107.4561 L
479.6367 107.8643 L
460.8613 90.1904 L
460.6533 89.4678 L
460.6533 89.4678 L
f
0 D
449.624 226.4502 m
449.8584 227.3916 L
468.6172 254.8115 L
468.7568 254.4209 L
449.624 226.4502 L
449.624 226.4502 L
f
1 D
458.4873 225.124 m
477.624 253.0947 L
477.4805 253.4834 L
458.7227 226.0674 L
458.4873 225.124 L
458.4873 225.124 L
f
457.5225 222.4229 m
476.6602 250.3955 L
476.5186 250.7842 L
457.7588 223.3662 L
457.5225 222.4229 L
457.5225 222.4229 L
f
447.0654 213.7939 m
478.2529 259.3818 L
478.0684 259.8916 L
447.374 215.0244 L
447.0654 213.7939 L
447.0654 213.7939 L
f
457.2861 188.9717 m
457.502 187.4775 L
477.3506 141.4541 L
477.4805 142.1455 L
457.2861 188.9717 L
457.2861 188.9717 L
f
446.2256 201.7959 m
446.5176 199.7705 L
478.9902 124.4697 L
479.165 125.4092 L
446.2256 201.7959 L
446.2256 201.7959 L
f
448.9307 178.3389 m
449.1455 176.8447 L
468.9941 130.8174 L
469.1221 131.5127 L
448.9307 178.3389 L
f
*U
U
U
u
u
*u
0 D
0 0 0 0.8 k
130.4634 597.2764 m
130.4634 599.5313 130.1929 598.8052 131.522 600.2837 c
133.1904 602.1401 L
464.2666 602.1401 L
466.002 598.979 L
466 363.3721 L
488.0244 357.7065 L
486.4434 345.9424 L
464.8818 332.5273 L
132.8945 332.5273 L
114.0957 345.9541 L
111.4805 357.6143 L
112.6865 357.9941 L
130.4634 362.9414 L
130.4634 597.2764 L
130.4634 597.2764 L
f
1 D
152.644 368.6938 m
443.8154 368.6938 L
443.8154 578.9141 L
152.644 578.9141 L
152.644 368.6938 L
f
*U
*u
0 0 0 1 k
464.5039 333.8506 m
485.2158 346.7363 L
486.5576 356.7188 L
445.1299 367.3716 L
151.3271 367.3716 L
113.041 356.7202 L
113.0366 356.7202 L
113.0371 356.7188 L
113.0371 356.7188 L
115.2759 346.7363 L
133.3184 333.8506 L
464.5039 333.8506 L
464.5039 333.8506 L
f
0 D
131.791 598.5952 m
464.6797 598.6377 L
464.6768 362.3477 L
445.1387 367.3711 L
445.1387 580.2368 L
151.3218 580.2368 L
151.3218 367.375 L
131.7861 361.936 L
131.791 598.5952 L
131.791 598.5952 L
f
461.6768 596.8398 m
461.6768 596.8398 L
461.6768 596.8398 L
f
1 D
131.7861 598.5991 m
463.4844 600.8179 L
133.7803 600.8179 L
131.7861 598.5991 L
f
*U
0 D
464.5039 333.8506 m
485.2158 346.7363 L
115.2759 346.7363 L
133.3184 333.8506 L
464.5039 333.8506 L
Bb
1 (GradientFill 1) 300.2456 367.7754 -90 27.4633 1 0 0 1 0 0 Bg
-0.000001 -27.4633 -373.9399 0.000016 487.2158 367.7754 Xm
-0.000357 -8158.2065 -373.9399 0.000016 487.2158 8525.9824 Bc
-0.000001 -27.4633 -373.9399 0.000016 487.2158 367.7754 Bm
-0.000357 -8158.2065 -373.9399 0.000016 487.2158 340.312 Bc
f
0 BB
0 0 0 0.5 k
131.7861 361.936 m
131.7861 598.5981 L
134.7832 596.8398 L
134.7832 362.7715 L
131.7861 361.936 L
f
464.6768 362.3477 m
464.6797 598.6377 L
461.6787 596.8398 L
461.6787 363.1177 L
464.6768 362.3477 L
f
0 0 0 0.05 k
0 XR
151.3271 367.3726 m
113.0366 356.7202 L
486.5576 356.7202 L
445.1299 367.3726 L
151.3271 367.3726 L
f
0 0 0 0.15 k
486.5566 356.7188 m
113.0366 356.7202 L
115.2759 346.7363 L
485.2158 346.7363 L
486.5566 356.7188 L
f
1 XR
134.7832 362.7715 m
134.7832 596.8398 L
151.3218 580.2368 L
151.3218 367.375 L
134.7832 362.7715 L
Bb
1 (GradientFill 2) 143.0522 551.0083 -90 118.6148 1 0 0 1 0 0 Bg
-0.000005 -118.6148 -20.5386 0.000001 153.3218 551.0083 Xm
-0.000353 -8067.8838 -20.5386 0.000001 153.3223 8618.8926 Bc
-0.000005 -118.6148 -20.5386 0.000001 153.3218 551.0083 Bm
-0.000353 -8067.8838 -20.5386 0.000001 153.3218 432.3936 Bc
f
0 BB
461.6787 363.1177 m
461.6777 596.8398 L
445.1387 580.2368 L
445.1387 367.3711 L
461.6787 363.1177 L
Bb
1 (GradientFill 2) 453.4082 551.0469 -90 118.4211 1 0 0 1 0 0 Bg
-0.000005 -118.4211 -20.54 0.000001 463.6787 551.0469 Xm
-0.000366 -8378.2012 -20.54 0.000001 463.6787 8929.248 Bc
-0.000005 -118.4211 -20.54 0.000001 463.6787 551.0469 Bm
-0.000366 -8378.2012 -20.54 0.000001 463.6787 432.626 Bc
f
0 BB
0 0 0 0.5 k
131.7861 598.5991 m
464.6807 598.6392 L
463.4844 600.8179 L
133.7803 600.8179 L
131.7861 598.5991 L
f
0 0 0 0.15 k
0 XR
134.7827 596.8398 m
151.3218 580.2368 L
445.1387 580.2368 L
461.6787 596.8398 L
134.7827 596.8398 L
f
0 0 0 0.3 k
1 XR
131.79 598.5952 m
464.6797 598.6377 L
461.6787 596.8398 L
134.7832 596.8398 L
131.79 598.5952 L
f
U
u
0 0 0 0.15 k
211.8374 352.8853 m
165.6484 375.7095 L
156.4907 375.7939 L
211.8374 347.1904 L
211.8374 352.8853 L
f
156.9419 574.1387 m
165.6265 573.7769 L
211.8374 593.9551 L
211.8374 598.3462 L
156.9419 574.1387 L
Bb
1 (GradientFill 4) 184.3896 656.0161 90 31.3292 1 0 0 1 0 0 Bg
-0.000001 31.3292 58.8955 0.000003 154.9419 656.0161 Xm
-0.000356 8145.6289 58.8955 0.000003 154.9424 -7489.6133 Bc
0 5.01267 58.8955 0.000003 154.9419 656.0161 Bm
-0.000001 21.3038 58.8955 0.000003 154.9419 661.0288 Bm
0 5.01267 58.8955 0.000003 154.9419 682.3325 Bm
-0.000356 8145.6289 58.8955 0.000003 154.9419 687.3452 Bc
f
0 BB
0 0 0 0.2 k
156.4907 375.7935 m
165.6484 375.7095 L
165.6265 573.7769 L
156.9419 574.1387 L
156.4907 375.7935 L
f
0.05 0 0 0.36 k
159.7446 375.8999 m
162.1592 375.9399 L
162.8193 573.6245 L
160.5942 573.8213 L
159.7446 375.8999 L
f
0 0 0 0.2 k
221.1016 327.1318 m
234.3652 328.5459 L
234.4707 611.5327 L
221.7275 614.0166 L
221.1016 327.1318 L
f
226.2881 328.0254 m
229.4824 328.3848 L
229.8086 612.0522 L
226.8164 612.6733 L
226.2881 328.0254 L
Bb
1 (GradientFill 1) 224.8018 470.3496 0 5.32971 1 0 0 1 0 0 Bg
5.32971 0 0 -288.6479 224.8018 614.6733 Xm
8102.3159 0 0 -288.6479 -7877.5142 614.6733 Bc
5.32971 0 0 -288.6479 224.8018 614.6733 Bm
8102.3159 0 0 -288.6479 230.1313 614.6733 Bc
f
0 BB
*u
1 D
0 g
221.7275 614.0166 m
151.9551 579.5693 L
151.7417 368.2729 L
221.1016 327.1318 L
221.7275 614.0166 L
221.7275 614.0166 L
f
0 D
211.8374 598.3462 m
211.8374 347.1914 L
156.4907 375.7935 L
156.9419 574.1387 L
211.8374 598.3462 L
Bb
1 (GradientFill 2) 186.7349 574.6719 -90 207.9513 1 0 0 1 0 0 Bg
-0.000009 -207.9513 -73.9858 0.000003 223.7275 574.6719 Xm
-0.000354 -8105.0796 -73.9858 0.000003 223.728 8679.751 Bc
-0.000009 -207.9513 -73.9858 0.000003 223.7275 574.6719 Bm
-0.000354 -8105.0796 -73.9858 0.000003 223.7275 366.7207 Bc
f
0 BB
*U
0 0 0 0 k
220.0039 328.9004 m
220.4482 612.333 L
158.0103 581.6851 L
158.0103 581.752 L
217.5908 607.4639 L
217.4932 333.0283 L
157.8008 365.4761 L
220.0039 328.9004 L
f
*u
1 D
0 0 0 0.7 k
0 XR
151.6133 579.8823 m
151.5303 368.0977 L
221.0488 326.6943 L
234.7783 328.0869 L
234.7617 611.7871 L
221.707 614.3511 L
151.6133 579.8823 L
151.6133 579.8823 L
f
0 D
152.3623 579.2393 m
221.0088 613.1997 L
221.4893 505.1152 L
222.542 613.3638 L
234.1641 611.2231 L
234.0225 328.8955 L
221.4688 327.6602 L
221.2588 399.2803 L
220.5957 327.749 L
152 368.29 L
152.3623 579.2393 L
152.3623 579.2393 L
f
211.2388 353.4756 m
166.0557 375.9111 L
166.0366 573.4478 L
211.4927 593.3647 L
211.2388 353.4756 L
211.2388 353.4756 L
f
165.5366 375.2974 m
156.4907 375.7939 L
165.3062 375.9912 L
165.2881 573.4053 L
156.9419 574.1392 L
165.541 574.0908 L
211.5654 594.2021 L
211.8374 598.3467 L
212.248 593.9019 L
211.8374 347.1914 L
211.1309 352.7622 L
165.5366 375.2974 L
f
*U
U
u
1 XR
166.0366 573.4482 m
211.4927 593.3647 L
211.2388 353.4761 L
166.0557 375.9111 L
166.0366 573.4482 L
Bb
1 (GradientFill 5) 114.4912 353.5332 56 274.9326 1 0 0 1 0 0 Bg
153.7403 227.9294 136.3611 -91.9767 46.3101 399.522 Xm
4443.4048 6587.6191 136.3611 -91.9767 -4397.0947 -6188.0967 Bc
153.7403 227.9294 136.3611 -91.9767 46.3101 399.522 Bm
4443.4048 6587.6191 136.3611 -91.9767 200.0503 627.4512 Bc
f
0 BB
*u
0.22 0 0 0.22 k
181.4722 489.5508 m
201.6641 442.728 L
201.5342 442.0332 L
181.6855 488.0581 L
181.4722 489.5508 L
181.4722 489.5508 L
f
173.3604 391.7134 m
173.6416 392.6875 L
204.3506 421.6016 L
204.5186 421.0503 L
173.3604 391.7134 L
173.3604 391.7134 L
f
1 D
175.918 403.0391 m
195.0234 421.0293 L
194.8994 421.439 L
176.126 403.7632 L
175.918 403.0391 L
175.918 403.0391 L
f
184.7822 397.1016 m
203.8906 415.0913 L
203.7622 415.5 L
184.9897 397.8262 L
184.7822 397.1016 L
184.7822 397.1016 L
f
183.8179 394.9028 m
202.9253 412.8916 L
202.8008 413.3008 L
184.0264 395.6265 L
183.8179 394.9028 L
183.8179 394.9028 L
f
0 D
172.7881 531.8857 m
173.0229 532.8281 L
191.7817 560.2476 L
191.9219 559.8564 L
172.7881 531.8857 L
172.7881 531.8857 L
f
1 D
181.6519 530.5591 m
200.7886 558.5313 L
200.644 558.9194 L
181.8872 531.5024 L
181.6519 530.5591 L
181.6519 530.5591 L
f
180.687 527.8584 m
199.8242 555.8301 L
199.6826 556.2192 L
180.9233 528.8008 L
180.687 527.8584 L
180.687 527.8584 L
f
170.23 519.2285 m
201.417 564.8174 L
201.2324 565.3271 L
170.5386 520.46 L
170.23 519.2285 L
170.23 519.2285 L
f
180.4512 494.4072 m
180.6665 492.9126 L
200.5151 446.8892 L
200.645 447.5815 L
180.4512 494.4072 L
180.4512 494.4072 L
f
169.3892 507.231 m
169.6821 505.2061 L
202.1538 429.9053 L
202.3301 430.8442 L
169.3892 507.231 L
169.3892 507.231 L
f
172.0947 483.7754 m
172.3101 482.2803 L
192.1592 436.2534 L
192.2866 436.9487 L
172.0947 483.7754 L
f
*U
U
u
*u
0 D
0 0 0 0.8 k
224.5303 474.3286 m
223.4014 474.3252 L
223.4014 492.2817 L
225.4326 492.2886 L
225.4326 491.1367 L
224.5303 491.1333 L
224.5303 474.3286 L
224.5303 474.3286 L
f
224.5303 453.4053 m
224.5303 453.4053 L
223.4014 453.4009 L
223.4014 471.3574 L
225.4326 471.3643 L
225.4326 470.2124 L
224.5303 470.2095 L
224.5303 453.4053 L
f
*U
0 0 0 1 k
219.0059 494.2148 m
212.7183 493.1816 L
212.6177 453.3989 L
214.4023 453.1484 L
220.209 453.0693 L
220.209 493.8159 L
219.0059 494.2148 L
f
0 0 0 0.6 k
218.9922 453.5859 m
220.043 453.2373 L
220.043 493.6963 L
218.9922 494.0444 L
218.9922 453.5859 L
f
218.9922 494.0444 m
212.8838 493.0405 L
212.7852 453.543 L
218.9922 453.5859 L
218.9922 494.0444 L
Bb
1 (GradientFill 3) 215.8887 481.2886 -90 23.5498 1 0 0 1 0 0 Bg
-0.000001 -23.5498 -10.207 0 220.9922 481.2886 Xm
-0.000354 -8107.6445 -10.207 0 220.9927 8588.9326 Bc
-0.000001 -23.5498 -10.207 0 220.9922 481.2886 Bm
-0.000354 -8107.6445 -10.207 0 220.9922 457.7388 Bc
f
0 BB
0 0 0 0.8 k
214.9546 479.0674 m
213.5269 479.0674 212.3687 477.4224 212.3687 475.394 c
212.3687 473.3657 213.5269 471.7207 214.9546 471.7207 c
216.3818 471.7207 217.54 473.3657 217.54 475.394 c
217.54 477.4224 216.3818 479.0674 214.9546 479.0674 c
f
0 0 0 0.5 k
212.8594 472.0664 m
215.2725 472.1558 L
216.5889 472.0938 217.2705 474.3418 217.3535 475.2744 c
217.4141 475.9536 217.334 476.6763 217.0156 477.2949 c
216.5967 478.1064 215.9346 478.4683 215.019 478.6802 c
214.896 478.709 L
214.8335 478.6045 l
214.3916 477.8608 214.1138 476.9697 213.9014 476.1445 c
213.707 475.3906 213.5601 474.6289 213.4009 473.8677 c
213.3027 473.397 213.1797 472.7339 212.9717 472.2998 c
212.8594 472.0664 L
f
213.1235 472.2344 m
213.6348 473.2979 213.8525 476.6313 214.9795 478.5273 C
216.0439 478.2808 216.542 477.854 216.8652 477.2261 c
217.8359 475.3428 216.5469 472.2539 215.2773 472.3135 C
213.1235 472.2344 L
Bb
1 (GradientFill 7) 216.3804 478.9639 -103 8.92199 1 0 0 1 0 0 Bg
-2.00701 -8.69332 -7.96174 1.83811 220.5049 478.0117 Xm
-1820.8981 -7887.1743 -7.96174 1.83811 2041.4033 8365.1865 Bc
-0.481683 -2.0864 -7.96174 1.83811 220.5049 478.0117 Bm
-0.541893 -2.3472 -7.96174 1.83811 220.0234 475.9253 Bm
-0.983436 -4.25973 -7.96174 1.83811 219.4814 473.5781 Bm
-1820.8981 -7887.1743 -7.96174 1.83811 218.498 469.3184 Bc
f
0 BB
0 0 0 0.7 k
213.6128 482.5723 m
213.5322 482.6353 213.4424 482.6836 213.3418 482.7129 C
211.8184 483.1582 209.6191 478.6631 209.1553 477.7412 C
207.25 473.9497 205.6841 469.8013 204.3286 465.8062 C
203.7046 463.9697 198.4131 448.0229 201.2363 447.1064 C
201.5249 446.8931 202.0317 446.6431 202.3682 446.5415 C
202.396 446.5327 L
202.4258 446.5342 L
205.521 446.6582 210.6177 460.9937 211.4434 463.4053 C
212.7896 467.3389 214.0479 471.5171 214.8018 475.5918 C
215.0181 476.7568 215.8994 481.4072 214.4751 482.145 C
214.46 482.1533 L
214.4434 482.1582 L
214.2393 482.2163 213.8877 482.4648 213.6128 482.5723 C
f
0 0 0 0.6 k
214.3945 482.0068 m
214.2397 482.0508 213.8501 482.3257 213.4927 482.4463 C
216.0225 480.1621 203.8018 446.5215 201.314 447.25 C
201.6641 446.9805 202.2568 446.7407 202.4189 446.6919 C
206.6919 446.8633 218.0264 480.126 214.3945 482.0068 C
f
0 0 0 0.2 k
213.292 482.5625 m
209.5244 483.6636 197.5513 448.3525 201.311 447.2495 c
205.0811 446.144 217.0498 481.4604 213.292 482.5625 C
f
211.605 477.7021 m
208.4556 478.626 198.4312 449.0713 201.5796 448.1494 c
204.731 447.2271 214.7534 476.7803 211.605 477.7021 C
Bb
1 (GradientFill 3) 207.3345 469.9824 -96 17.4528 1 0 0 1 0 0 Bg
-1.82431 -17.3572 -17.2415 1.81216 215.9551 469.0762 Xm
-846.1633 -8050.7026 -17.2415 1.81216 1062.1182 8519.7793 Bc
-1.82431 -17.3572 -17.2415 1.81216 215.9551 469.0762 Bm
-846.1633 -8050.7026 -17.2415 1.81216 214.1309 451.7188 Bc
f
0 BB
0 0 0 0.05 k
218.5742 493.6436 m
213.0425 492.7349 L
213.0415 492.457 L
218.2432 493.312 L
218.2432 457.001 L
218.5742 457.0029 L
218.5742 493.6436 L
f
U
u
0 0 0 0.15 k
384.5811 352.8853 m
430.7705 375.7095 L
439.9277 375.7939 L
384.5811 347.1904 L
384.5811 352.8853 L
f
439.4775 574.1387 m
430.792 573.7769 L
384.5811 593.9551 L
384.5811 598.3462 L
439.4775 574.1387 L
Bb
1 (GradientFill 4) 412.0293 656.0161 90 31.3292 1 0 0 1 0 0 Bg
-0.000001 31.3292 58.8965 0.000003 382.5811 656.0161 Xm
-0.000366 8373.2686 58.8965 0.000003 382.5811 -7717.252 Bc
0 5.01267 58.8965 0.000003 382.5811 656.0161 Bm
-0.000001 21.3038 58.8965 0.000003 382.5811 661.0288 Bm
0 5.01267 58.8965 0.000003 382.5811 682.3325 Bm
-0.000366 8373.2686 58.8965 0.000003 382.5811 687.3452 Bc
f
0 BB
0 0 0 0.2 k
439.9277 375.7935 m
430.7705 375.7095 L
430.792 573.7769 L
439.4775 574.1387 L
439.9277 375.7935 L
f
0.05 0 0 0.36 k
436.6738 375.8999 m
434.2588 375.9399 L
433.5996 573.6245 L
435.8242 573.8213 L
436.6738 375.8999 L
f
0 0 0 0.2 k
375.3174 327.1318 m
362.0537 328.5459 L
361.9473 611.5327 L
374.6914 614.0166 L
375.3174 327.1318 L
f
370.1318 328.0254 m
366.9365 328.3848 L
366.6104 612.0522 L
369.6025 612.6733 L
370.1318 328.0254 L
Bb
1 (GradientFill 1) 371.6182 470.3491 -180 5.3308 1 0 0 1 0 0 Bg
-5.3308 0 0.000025 288.6479 371.6182 326.0254 Xm
-8249.1318 0.000721 0.000025 288.6479 8620.75 326.0249 Bc
-5.3308 0 0.000025 288.6479 371.6182 326.0254 Bm
-8249.1318 0.000721 0.000025 288.6479 366.2871 326.0254 Bc
f
0 BB
*u
0 g
374.6914 614.0166 m
444.4639 579.5693 L
444.6777 368.2729 L
375.3174 327.1318 L
374.6914 614.0166 L
374.6914 614.0166 L
f
1 D
384.5811 598.3462 m
384.5811 347.1914 L
439.9277 375.7935 L
439.4775 574.1387 L
384.5811 598.3462 L
Bb
1 (GradientFill 2) 409.6846 574.6719 -90 207.9513 1 0 0 1 0 0 Bg
-0.000009 -207.9513 -73.9863 0.000003 446.6777 574.6719 Xm
-0.000364 -8328.0293 -73.9863 0.000003 446.6777 8902.7012 Bc
-0.000009 -207.9513 -73.9863 0.000003 446.6777 574.6719 Bm
-0.000364 -8328.0293 -73.9863 0.000003 446.6777 366.7207 Bc
f
0 BB
*U
0 D
0 0 0 0 k
376.415 328.9004 m
375.9707 612.333 L
438.4082 581.6851 L
438.4082 581.752 L
378.8281 607.4639 L
378.9258 333.0283 L
438.6182 365.4761 L
376.415 328.9004 L
f
*u
0 0 0 0.7 k
0 XR
444.8057 579.8823 m
444.8887 368.0977 L
375.3701 326.6943 L
361.6406 328.0869 L
361.6572 611.7871 L
374.7119 614.3511 L
444.8057 579.8823 L
444.8057 579.8823 L
f
1 D
444.0566 579.2393 m
375.4102 613.1997 L
374.9287 505.1152 L
373.877 613.3638 L
362.2549 611.2231 L
362.3955 328.8955 L
374.9512 327.6602 L
375.1611 399.2803 L
375.8232 327.749 L
444.4199 368.29 L
444.0566 579.2393 L
444.0566 579.2393 L
f
385.1797 353.4756 m
430.3633 375.9111 L
430.3818 573.4478 L
384.9258 593.3647 L
385.1797 353.4756 L
385.1797 353.4756 L
f
430.8818 375.2974 m
439.9277 375.7939 L
431.1123 375.9912 L
431.1318 573.4053 L
439.4775 574.1392 L
430.8789 574.0908 L
384.8535 594.2021 L
384.5811 598.3467 L
384.1709 593.9019 L
384.5811 347.1914 L
385.2881 352.7622 L
430.8818 375.2974 L
f
*U
U
u
0 D
1 XR
430.3818 573.4482 m
384.9258 593.3647 L
385.1797 353.4761 L
430.3633 375.9111 L
430.3818 573.4482 L
Bb
1 (GradientFill 5) 479.9463 352.3369 123 274.9333 1 0 0 1 0 0 Bg
-149.7394 230.5784 135.6257 88.0764 412.1338 308.2988 Xm
-4527.1333 6971.1729 135.6257 88.0764 4939.2666 -6662.874 Bc
-149.7394 230.5784 135.6257 88.0764 412.1338 308.2988 Bm
-4527.1333 6971.1729 135.6257 88.0764 262.3945 538.8774 Bc
f
0 BB
*u
1 D
0.22 0 0 0.22 k
414.9473 489.5508 m
394.7549 442.728 L
394.8848 442.0332 L
414.7324 488.0581 L
414.9473 489.5508 L
414.9473 489.5508 L
f
423.0586 391.7134 m
422.7773 392.6875 L
392.0684 421.6016 L
391.9004 421.0503 L
423.0586 391.7134 L
423.0586 391.7134 L
f
0 D
420.501 403.0391 m
401.3955 421.0293 L
401.5195 421.439 L
420.293 403.7632 L
420.501 403.0391 L
420.501 403.0391 L
f
411.6357 397.1016 m
392.5293 415.0913 L
392.6563 415.5 L
411.4287 397.8262 L
411.6357 397.1016 L
411.6357 397.1016 L
f
412.6016 394.9028 m
393.4932 412.8916 L
393.6182 413.3008 L
412.3936 395.6265 L
412.6016 394.9028 L
412.6016 394.9028 L
f
1 D
423.6309 531.8857 m
423.3955 532.8281 L
404.6367 560.2476 L
404.4961 559.8564 L
423.6309 531.8857 L
423.6309 531.8857 L
f
0 D
414.7666 530.5591 m
395.6299 558.5313 L
395.7744 558.9194 L
414.5313 531.5024 L
414.7666 530.5591 L
414.7666 530.5591 L
f
415.7324 527.8584 m
396.5947 555.8301 L
396.7354 556.2192 L
415.4961 528.8008 L
415.7324 527.8584 L
415.7324 527.8584 L
f
426.1885 519.2285 m
395.001 564.8174 L
395.1865 565.3271 L
425.8799 520.46 L
426.1885 519.2285 L
426.1885 519.2285 L
f
415.9678 494.4072 m
415.752 492.9126 L
395.9043 446.8892 L
395.7744 447.5815 L
415.9678 494.4072 L
415.9678 494.4072 L
f
427.0293 507.231 m
426.7373 505.2061 L
394.2646 429.9053 L
394.0889 430.8442 L
427.0293 507.231 L
427.0293 507.231 L
f
424.3242 483.7754 m
424.1084 482.2803 L
404.2598 436.2534 L
404.1328 436.9487 L
424.3242 483.7754 L
f
*U
U
u
*u
1 D
0 0 0 0.8 k
371.8896 474.3286 m
373.0186 474.3252 L
373.0186 492.2817 L
370.9863 492.2886 L
370.9863 491.1367 L
371.8896 491.1333 L
371.8896 474.3286 L
371.8896 474.3286 L
f
371.8896 453.4053 m
371.8896 453.4053 L
373.0186 453.4009 L
373.0186 471.3574 L
370.9863 471.3643 L
370.9863 470.2124 L
371.8896 470.2095 L
371.8896 453.4053 L
f
*U
0 D
0 0 0 1 k
377.4131 494.2148 m
383.7002 493.1816 L
383.8008 453.3989 L
382.0166 453.1484 L
376.21 453.0693 L
376.21 493.8159 L
377.4131 494.2148 L
f
0 0 0 0.6 k
377.4268 453.5859 m
376.376 453.2373 L
376.376 493.6963 L
377.4268 494.0444 L
377.4268 453.5859 L
f
377.4268 494.0444 m
383.5352 493.0405 L
383.6348 453.543 L
377.4268 453.5859 L
377.4268 494.0444 L
Bb
1 (GradientFill 3) 380.5313 481.2886 -90 23.5498 1 0 0 1 0 0 Bg
-0.000001 -23.5498 -10.208 0 385.6348 481.2886 Xm
-0.000362 -8272.2871 -10.208 0 385.6348 8753.5752 Bc
-0.000001 -23.5498 -10.208 0 385.6348 481.2886 Bm
-0.000362 -8272.2871 -10.208 0 385.6348 457.7388 Bc
f
0 BB
0 0 0 0.8 k
381.4639 479.0674 m
382.8926 479.0674 384.0498 477.4224 384.0498 475.394 c
384.0498 473.3657 382.8926 471.7207 381.4639 471.7207 c
380.0361 471.7207 378.8789 473.3657 378.8789 475.394 c
378.8789 477.4224 380.0361 479.0674 381.4639 479.0674 c
f
0 0 0 0.5 k
383.5596 472.0664 m
381.1455 472.1558 L
379.8311 472.0938 379.1484 474.3418 379.0654 475.2744 c
379.0049 475.9536 379.085 476.6763 379.4033 477.2949 c
379.8213 478.1064 380.4844 478.4683 381.3994 478.6802 c
381.5225 478.709 L
381.585 478.6045 l
382.0264 477.8608 382.3057 476.9697 382.5186 476.1445 c
382.7119 475.3906 382.8594 474.6289 383.0176 473.8677 c
383.1162 473.397 383.2393 472.7339 383.4473 472.2998 c
383.5596 472.0664 L
f
383.2949 472.2344 m
382.7852 473.2979 382.5664 476.6313 381.4395 478.5273 C
380.375 478.2808 379.877 477.854 379.5537 477.2261 c
378.583 475.3428 379.8721 472.2539 381.1416 472.3135 C
383.2949 472.2344 L
Bb
1 (GradientFill 7) 379.9668 478.8936 -76 8.92184 1 0 0 1 0 0 Bg
2.15839 -8.65683 -7.93392 -1.97815 383.8242 479.855 Xm
1997.8572 -8012.9678 -7.93392 -1.97815 -1614.0327 8492.8223 Bc
0.518013 -2.07764 -7.93392 -1.97815 383.8242 479.855 Bm
0.582765 -2.33734 -7.93392 -1.97815 384.3418 477.7773 Bm
1.05761 -4.24185 -7.93392 -1.97815 384.9248 475.4399 Bm
1997.8572 -8012.9678 -7.93392 -1.97815 385.9824 471.1982 Bc
f
0 BB
0 0 0 0.7 k
382.8066 482.5723 m
382.8867 482.6353 382.9766 482.6836 383.0771 482.7129 C
384.6006 483.1582 386.7998 478.6631 387.2637 477.7412 C
389.1689 473.9497 390.7344 469.8013 392.0908 465.8062 C
392.7139 463.9697 398.0059 448.0229 395.1826 447.1064 C
394.8936 446.8931 394.3867 446.6431 394.0508 446.5415 C
394.0225 446.5327 L
393.9932 446.5342 L
390.8984 446.6582 385.8018 460.9937 384.9766 463.4053 C
383.6289 467.3389 382.3721 471.5171 381.6172 475.5918 C
381.4014 476.7568 380.5186 481.4072 381.9434 482.145 C
381.959 482.1533 L
381.9756 482.1582 L
382.1797 482.2163 382.5313 482.4648 382.8066 482.5723 C
f
0 0 0 0.6 k
382.0234 482.0068 m
382.1797 482.0508 382.5693 482.3257 382.9258 482.4463 C
380.3975 480.1621 392.6172 446.5215 395.1045 447.25 C
394.7549 446.9805 394.1621 446.7407 394 446.6919 C
389.7266 446.8633 378.3936 480.126 382.0234 482.0068 C
f
0 0 0 0.2 k
383.126 482.5625 m
386.8945 483.6636 398.8682 448.3525 395.1074 447.2495 c
391.3379 446.144 379.3691 481.4604 383.126 482.5625 C
f
384.8145 477.7021 m
387.9639 478.626 397.9873 449.0713 394.8389 448.1494 c
391.6875 447.2271 381.665 476.7803 384.8145 477.7021 C
Bb
1 (GradientFill 3) 388.9561 470.0122 -83 17.4522 1 0 0 1 0 0 Bg
2.12689 -17.3222 -16.6983 -2.0503 397.3057 471.0376 Xm
1008.667 -8214.9336 -16.6983 -2.0503 -611.3613 8685.9717 Bc
2.12689 -17.3222 -16.6983 -2.0503 397.3057 471.0376 Bm
1008.667 -8214.9336 -16.6983 -2.0503 399.4326 453.7153 Bc
f
0 BB
0 0 0 0.05 k
377.8447 493.6436 m
383.376 492.7349 L
383.377 492.457 L
378.1758 493.312 L
378.1758 457.001 L
377.8447 457.0029 L
377.8447 493.6436 L
f
U
U
u
u
0 0 0 0.7 k
84.6543 177.2354 m
84.5752 177.2979 84.4854 177.3467 84.3848 177.376 C
82.8652 177.8193 80.6714 173.3369 80.209 172.417 C
78.3086 168.6357 76.7466 164.4971 75.3945 160.5127 C
74.7729 158.6807 69.4946 142.7764 72.311 141.8604 C
72.5986 141.6494 73.1035 141.3994 73.4395 141.2979 C
73.4673 141.29 L
73.4971 141.29 L
76.584 141.415 81.6675 155.7119 82.4912 158.1182 C
83.8345 162.042 85.0889 166.21 85.8413 170.2725 C
86.0571 171.4346 86.9365 176.0732 85.5156 176.8096 C
85.4995 176.8174 L
85.4829 176.8232 L
85.2803 176.8799 84.9292 177.1279 84.6543 177.2354 C
f
0 0 0 0.6 k
85.4351 176.6729 m
85.2803 176.7158 84.8921 176.9893 84.5356 177.1104 C
87.0576 174.8311 74.8691 141.2783 72.3882 142.0049 C
72.7368 141.7354 73.3286 141.4971 73.4902 141.4482 C
77.7524 141.6182 89.0566 174.7959 85.4351 176.6729 C
f
0 0 0 0.2 k
84.3354 177.2256 m
80.5767 178.3252 68.6348 143.1025 72.3853 142.0049 c
76.1455 140.9014 88.0835 176.126 84.3354 177.2256 C
f
82.6519 172.3779 m
79.5112 173.2998 69.5132 143.8213 72.6533 142.9014 c
75.7964 141.9814 85.793 171.458 82.6519 172.3779 C
Bb
1 (GradientFill 3) 78.3936 164.6816 -96 17.4158 1 0 0 1 0 0 Bg
-1.82045 -17.3204 -17.207 1.80853 86.9966 163.7773 Xm
-832.6826 -7922.4429 -17.207 1.80853 919.6797 8086.2202 Bc
-1.82045 -17.3204 -17.207 1.80853 86.9966 163.7773 Bm
-832.6826 -7922.4429 -17.207 1.80853 85.1763 146.457 Bc
f
0 BB
U
u
0 0 0 0.15 k
105.2993 47.4502 m
151.4888 70.2744 L
160.6465 70.3584 L
105.2993 41.7549 L
105.2993 47.4502 L
f
160.1958 268.7021 m
151.5107 268.3408 L
105.2993 288.5186 L
105.2993 292.9092 L
160.1958 268.7021 L
Bb
1 (GradientFill 4) 132.7476 350.5771 90 31.3279 1 0 0 1 0 0 Bg
-0.000001 31.3279 58.8965 0.000003 103.2993 350.5771 Xm
-0.000354 8093.9844 58.8965 0.000003 103.2998 -7743.4072 Bc
0 5.01247 58.8965 0.000003 103.2993 350.5771 Bm
-0.000001 21.303 58.8965 0.000003 103.2993 355.5898 Bm
0 5.01247 58.8965 0.000003 103.2993 376.8926 Bm
-0.000354 8093.9844 58.8965 0.000003 103.2993 381.9053 Bc
f
0 BB
0 0 0 0.2 k
160.6465 70.3584 m
151.4888 70.2744 L
151.5107 268.3408 L
160.1958 268.7021 L
160.6465 70.3584 L
f
0.05 0 0 0.36 k
157.3926 70.4639 m
154.9775 70.5049 L
154.3184 268.1885 L
156.543 268.3857 L
157.3926 70.4639 L
f
0 0 0 0.2 k
96.0356 21.6963 m
82.772 23.1104 L
82.6665 306.0967 L
95.4102 308.5811 L
96.0356 21.6963 L
f
90.8496 22.5889 m
87.6548 22.9482 L
87.3291 306.6162 L
90.3208 307.2373 L
90.8496 22.5889 L
Bb
1 (GradientFill 1) 92.3369 164.9131 -180 5.33063 1 0 0 1 0 0 Bg
-5.33063 0 0.000025 288.6484 92.3369 20.5889 Xm
-7969.8506 0.000697 0.000025 288.6484 8062.1875 20.5879 Bc
-5.33063 0 0.000025 288.6484 92.3369 20.5889 Bm
-7969.8506 0.000697 0.000025 288.6484 87.0063 20.5889 Bc
f
0 BB
*u
0 g
95.4102 308.5811 m
165.1826 274.1338 L
165.396 62.8369 L
96.0356 21.6963 L
95.4102 308.5811 L
95.4102 308.5811 L
f
1 D
105.2993 292.9092 m
105.2993 41.7549 L
160.6465 70.3584 L
160.1958 268.7021 L
105.2993 292.9092 L
Bb
1 (GradientFill 2) 130.4028 269.2363 -90 207.9516 1 0 0 1 0 0 Bg
-0.000009 -207.9516 -73.9859 0.000003 167.396 269.2363 Xm
-0.000352 -8048.748 -73.9859 0.000003 167.3965 8317.9844 Bc
-0.000009 -207.9516 -73.9859 0.000003 167.396 269.2363 Bm
-0.000352 -8048.748 -73.9859 0.000003 167.396 61.2852 Bc
f
0 BB
*U
0 D
0 0 0 0 k
97.1333 23.4658 m
96.689 306.8975 L
159.127 276.249 L
159.127 276.3174 L
99.5464 302.0283 L
99.644 27.5928 L
159.3359 60.04 L
97.1333 23.4658 L
f
*u
0 0 0 0.7 k
0 XR
165.5239 274.4463 m
165.6069 62.6611 L
96.0889 21.2588 L
82.3589 22.6514 L
82.3755 306.3525 L
95.4302 308.915 L
165.5239 274.4463 L
165.5239 274.4463 L
f
1 D
164.7744 273.8037 m
96.1284 307.7646 L
95.6475 199.6787 L
94.5952 307.9287 L
82.9727 305.7881 L
83.1143 23.46 L
95.6689 22.2236 L
95.8789 93.8447 L
96.5415 22.3135 L
165.1377 62.8525 L
164.7744 273.8037 L
164.7744 273.8037 L
f
105.8984 48.04 m
151.0815 70.4756 L
151.1006 268.0127 L
105.6445 287.9287 L
105.8984 48.04 L
105.8984 48.04 L
f
151.6006 69.8623 m
160.6465 70.3584 L
151.8311 70.5557 L
151.8496 267.9697 L
160.1958 268.7021 L
151.5967 268.6553 L
105.5718 288.7666 L
105.2993 292.9111 L
104.8892 288.4658 L
105.2993 41.7549 L
106.0063 47.3271 L
151.6006 69.8623 L
f
*U
U
u
0 D
1 XR
151.1006 268.0127 m
105.6445 287.9287 L
105.8984 48.04 L
151.0815 70.4756 L
151.1006 268.0127 L
Bb
1 (GradientFill 5) 200.6641 46.9033 123 274.9319 1 0 0 1 0 0 Bg
-149.7387 230.5773 135.6259 88.0765 132.8506 2.86523 Xm
-4375.0254 6736.9482 135.6259 88.0765 4507.876 -6734.083 Bc
-149.7387 230.5773 135.6259 88.0765 132.8506 2.86523 Bm
-4375.0254 6736.9482 135.6259 88.0765 -16.8882 233.4424 Bc
f
0 BB
u
*u
1 D
0.1 0 0 0.72 k
128.978 277.7061 m
128.98 59.501 L
151.0815 70.4756 L
151.1006 268.0127 L
128.978 277.7061 L
128.978 277.7061 L
f
122.4414 56.2549 m
106.9551 52.2705 L
107.4224 48.7979 L
122.4414 56.2549 L
f
*U
*u
0 D
0.1 0 0 0.9 k
108.6729 49.4189 m
108.4224 51.2822 L
116.7324 53.4189 L
108.6729 49.4189 L
108.6729 49.4189 L
f
1 D
149.8413 268.5635 m
130.3003 277.126 L
130.3022 60.1572 L
149.8413 69.8604 L
149.8413 268.5635 L
f
*U
0 D
0.1 0 0 0.45 k
130.3022 60.1572 m
130.3003 277.126 L
133.3018 275.8115 L
133.3018 61.6475 L
130.3022 60.1572 L
f
0.1 0 0 0.05 k
0 XR
112.4312 51.2842 m
108.4224 51.2842 L
116.7373 53.4229 L
112.4312 51.2842 L
f
0.1 0 0 0.14 k
108.4229 51.2822 m
112.4287 51.2822 L
108.6733 49.4189 L
108.4229 51.2822 L
f
1 XR
133.3018 61.6475 m
133.3022 275.8115 L
149.8413 268.5635 L
149.8413 69.8604 L
133.3018 61.6475 L
Bb
1 (GradientFill 6) 141.5718 217.1523 -90 99.9383 1 0 0 1 0 0 Bg
-0.000004 -99.9383 -20.5396 0.000001 151.8413 217.1523 Xm
-0.000353 -8079.231 -20.5396 0.000001 151.8418 8296.3838 Bc
-0.000004 -99.9383 -20.5396 0.000001 151.8413 217.1523 Bm
-0.000353 -8079.231 -20.5396 0.000001 151.8413 117.2139 Bc
f
0 BB
U
*u
1 D
0.22 0 0 0.22 k
135.665 184.1162 m
115.4736 137.292 L
115.603 136.5967 L
135.4512 182.6221 L
135.665 184.1162 L
135.665 184.1162 L
f
143.7764 86.2783 m
143.4956 87.2529 L
112.7866 116.165 L
112.6187 115.6143 L
143.7764 86.2783 L
143.7764 86.2783 L
f
0 D
141.2192 97.6045 m
122.1143 115.5947 L
122.2378 116.0029 L
141.0107 98.3271 L
141.2192 97.6045 L
141.2192 97.6045 L
f
132.354 91.667 m
113.2471 109.6553 L
113.375 110.0654 L
132.1475 92.3896 L
132.354 91.667 L
132.354 91.667 L
f
133.3198 89.4678 m
114.2114 107.4561 L
114.3359 107.8643 L
133.1113 90.1904 L
133.3198 89.4678 L
133.3198 89.4678 L
f
1 D
144.3491 226.4502 m
144.1143 227.3916 L
125.356 254.8115 L
125.2148 254.4209 L
144.3491 226.4502 L
144.3491 226.4502 L
f
0 D
135.4849 225.124 m
116.3481 253.0947 L
116.4927 253.4834 L
135.25 226.0674 L
135.4849 225.124 L
135.4849 225.124 L
f
136.4502 222.4229 m
117.3125 250.3955 L
117.4541 250.7842 L
136.2139 223.3662 L
136.4502 222.4229 L
136.4502 222.4229 L
f
146.9072 213.7939 m
115.7202 259.3818 L
115.9048 259.8916 L
146.5986 215.0244 L
146.9072 213.7939 L
146.9072 213.7939 L
f
136.686 188.9717 m
136.4707 187.4775 L
116.6226 141.4541 L
116.4927 142.1455 L
136.686 188.9717 L
136.686 188.9717 L
f
147.7476 201.7959 m
147.4551 199.7705 L
114.9829 124.4697 L
114.8076 125.4092 L
147.7476 201.7959 L
147.7476 201.7959 L
f
145.0425 178.3389 m
144.8267 176.8447 L
124.9785 130.8174 L
124.8511 131.5127 L
145.0425 178.3389 L
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
